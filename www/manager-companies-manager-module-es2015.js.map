{"version":3,"sources":["./src/app/companies/manager/companies-manager.page.html","./src/app/companies/manager/companies-manager.module.ts","./src/app/companies/manager/companies-manager.page.ts"],"names":[],"mappings":"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","file":"manager-companies-manager-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>My Companies</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button fill=\\\"clear\\\" color=\\\"light\\\" class=\\\"filters-btn\\\" (click)=\\\"loadCompanies()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"refresh\\\"></ion-icon>\\n      </ion-button>\\n\\n      <ion-button fill=\\\"clear\\\" color=\\\"light\\\" class=\\\"filters-btn\\\" (click)=\\\"createNewCompany()\\\" *ngIf=\\\"localUser?.role_id == 1 || localUser?.role_id == 2\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"add\\\"></ion-icon>\\n      </ion-button>\\n     \\n    </ion-buttons>\\n  </ion-toolbar>\\n\\n</ion-header>\\n\\n<ion-content class=\\\"firebase-listing-content\\\">\\n   <!------- Loading View ------->\\n <ion-grid style=\\\"height: 100%\\\" *ngIf=\\\"loading\\\">\\n  <ion-row justify-content-center align-items-center style=\\\"height: 100%; flex-direction: column\\\">\\n    <ion-spinner name=\\\"bubbles\\\" style=\\\"width:32px;height:32px;margin:0 auto;stroke:#222;fill:#444;text-align: center;\\\"></ion-spinner>\\n    <h5 style=\\\"text-align: center;columns: #555555;\\\">Loading Companies...</h5>\\n    </ion-row>\\n  </ion-grid>\\n <!------- Loading View ------->\\n\\n   <!------- Empty View ------->\\n   <ion-grid style=\\\"height: 100%\\\" *ngIf=\\\"listing && listing?.length <= 0 && !loading\\\">\\n    <ion-row justify-content-center align-items-center style=\\\"height: 100%; flex-direction: column\\\">\\n      <ion-icon src=\\\"./assets/sample-icons/side-menu/business.svg\\\" style=\\\"display:block;width:48px;height:48px;color:#444\\\"></ion-icon>\\n      <h5 style=\\\"text-align: center;columns: #555555;\\\">Looks like you have not registered a company yet.</h5>\\n      <ion-button class=\\\"promo-code-btn\\\" expand=\\\"block\\\" shape=\\\"round\\\" fill=\\\"outline\\\" color=\\\"claim\\\" (click)=\\\"createNewCompany()\\\">\\n        <span class=\\\"promo-code\\\">\\n         REGISTER COMPANY\\n        </span>\\n      </ion-button>\\n      </ion-row>\\n    </ion-grid>\\n   <!------- Empty View ------->\\n\\n      <ion-list class=\\\"items-list\\\" *ngIf=\\\"listing?.length > 0 && !loading\\\">     \\n        <ion-item class=\\\"list-item\\\" *ngFor=\\\"let item of listing\\\" [routerLink]=\\\"['/companies/details', item.id]\\\">\\n   \\n          <ion-row class=\\\"user-row\\\">\\n            <ion-col size=\\\"2\\\" class=\\\"user-image-wrapper\\\">\\n              <app-aspect-ratio [ratio]=\\\"{w: 1, h: 1}\\\">\\n                <app-image-shell class=\\\"user-image\\\" animation=\\\"spinner\\\" [mode]=\\\"'cover'\\\" [src]=\\\"item?.logo\\\" [alt]=\\\"'Company Logo'\\\"></app-image-shell>\\n              </app-aspect-ratio>\\n            </ion-col>\\n            <ion-col class=\\\"user-data-wrapper\\\">\\n              <div class=\\\"user-info\\\">\\n                <h3 class=\\\"user-name\\\">\\n                  <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"item?.title\\\"></app-text-shell>\\n                </h3>\\n           \\n       <h5 class=\\\"user-age\\\" *ngIf=\\\"item?.tagline\\\">\\n        <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"item?.tagline\\\"></app-text-shell>\\n      </h5>\\n\\n      <!-- <h5 class=\\\"user-age\\\" *ngIf=\\\"item?.website\\\">\\n        <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"item?.website\\\"></app-text-shell>\\n      </h5> -->\\n    \\n      <div *ngIf=\\\"!item.is_published\\\">\\n       <ion-badge class=\\\"schedule-closed\\\" color=\\\"danger\\\">Not Approved</ion-badge>\\n       </div>\\n\\n       <!-- <div class=\\\"amenities-wrapper\\\" style=\\\"margin-left: 0px;\\\">\\n        <ion-row class=\\\"amenities-tags\\\" style=\\\"margin-left: 0px;\\\">\\n          <ion-col class=\\\"tag-wrapper\\\" *ngFor=\\\"let skill of item?.jobAreas| slice:0:3\\\">\\n            <span class=\\\"amenity-tag\\\" style=\\\"color:white;\\\">\\n              <app-text-shell [data]=\\\"skill.title\\\"></app-text-shell>\\n            </span>\\n          </ion-col>\\n          <ion-col class=\\\"tag-wrapper\\\" *ngIf=\\\"item?.jobAreas.length > 3\\\">\\n            <span class=\\\"amenity-tag\\\" style=\\\"color:white;font-weight: bold;\\\">\\n              <app-text-shell [data]=\\\"'.. + '+(item?.jobAreas.length -3)+' more'\\\"></app-text-shell>\\n            </span>\\n          </ion-col>\\n         \\n        </ion-row>\\n      </div> -->\\n\\n\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n     \\n\\n  </ion-item>\\n     </ion-list>\\n     \\n     \\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { CompanyListingResolver } from '../companies.resolver';\nimport { CompanyService } from '../companies.service';\nimport { ComponentsModule } from '../../components/components.module';\nimport { CompaniesManagerPage } from './companies-manager.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CompaniesManagerPage,\n    resolve: {\n      data: CompanyListingResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ComponentsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CompaniesManagerPage],\n  providers: [\n    CompanyListingResolver,\n    CompanyService\n  ],\n  entryComponents: []\n})\nexport class CompaniesManagerPageModule {\n\n}\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { CompanyListingModel, CompanyModel } from '../../dbmodels/company-model';\nimport { ModalController } from '@ionic/angular';\nimport { ActivatedRoute, Route, Router } from '@angular/router';\nimport { CompanyService } from '../companies.service';\nimport { CreateCompanyModal } from '../create/create-company.modal';\nimport { ToastService } from '../../services/toast.service';\nimport { AuthConstants } from '../../config/AuthConstants';\nimport { LocalUser } from '../../dbmodels/local-user';\nimport { AuthService } from '../../services/auth.service';\nimport { StorageService } from '../../services/storage.service';\n\n@Component({\n  selector: 'app-companies-manager',\n  templateUrl: './companies-manager.page.html',\n  styleUrls: [\n    '../listing/styles/listing.page.scss',\n    '../listing/styles/listing.shell.scss',\n    '../listing/styles/company-listing.ios.scss',\n    '../../bluspecstyles/listing.page.scss'\n  ],\n})\nexport class CompaniesManagerPage implements OnInit {\n  listing: Array<CompanyModel>;\n  loading : boolean = true;\n  localUser: LocalUser;\n  \n  constructor(private companyService: CompanyService, \n    private route: ActivatedRoute, \n    private ngRouter: Router,\n    private toastService: ToastService,\n    private authService: AuthService,\n    private storageService: StorageService,\n    private modalController: ModalController) {\n\n  }\n\n  ionViewWillEnter(){\n      this.fetchFreshList(false);\n  } \n\n  ngOnInit() {\n    this.authService.getAuthCache().then(promisedValue=>{\n      this.localUser = promisedValue;\n      if(AuthConstants.DEV_MODE){\n        console.log(\"Local User: \"+this.localUser.id);\n      }\n    });\n\n    this.storageService.get(AuthConstants.MY_COMPANIES).then(companies=>{\n      if(companies){\n         if(companies.length > 0){\n            this.listing = companies;\n            this.loading = false;\n         }\n      }\n    });\n  }\n\n   loadCompanies(){\n    this.fetchFreshList(true);\n  }\n\n  async createNewCompany(){\n    //this.ngRouter.navigate(['create-company']);\n    const modal = await this.modalController.create({\n      component: CreateCompanyModal,\n      cssClass: 'fullscreen-modal-css'\n    });\n    await modal.present();\n  }\n\n  fetchFreshList(showLoading: boolean){\n    if(showLoading){this.loading = true;}\n    this.authService.getAuthCache().then(results =>{\n        if(results){\n              \n       this.companyService.getMyCompanies(results.api_key, {}).subscribe(\n        (res: any) => {\n          this.loading = false;\n          if(AuthConstants.DEV_MODE){\n            console.log(\"###### Companies List API Response: \"+JSON.stringify(res));\n          }\n        if (res.error) {\n          this.toastService.presentToast(res.message);\n        } else {\n          this.listing = res.items;\n          this.loading = false;\n          this.storageService.store(AuthConstants.MY_COMPANIES, res.items);  \n        }\n        },\n        (error: any) => {\n        this.toastService.presentToast('Looks like there is a Network Issue.'+error.message);\n        },\n        () => {\n          // complete callback\n         // this.loaderDismiss();\n      }\n        );\n        }\n    });\n }\n\n\n}\n"],"sourceRoot":"webpack:///"}