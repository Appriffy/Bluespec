{"version":3,"sources":["src/app/companies/manager/companies-manager.page.html","src/app/companies/manager/companies-manager.module.ts","src/app/companies/manager/companies-manager.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>My Companies</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button fill=\\\"clear\\\" color=\\\"light\\\" class=\\\"filters-btn\\\" (click)=\\\"loadCompanies()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"refresh\\\"></ion-icon>\\n      </ion-button>\\n\\n      <ion-button fill=\\\"clear\\\" color=\\\"light\\\" class=\\\"filters-btn\\\" (click)=\\\"createNewCompany()\\\" *ngIf=\\\"localUser?.role_id == 1 || localUser?.role_id == 2\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"add\\\"></ion-icon>\\n      </ion-button>\\n     \\n    </ion-buttons>\\n  </ion-toolbar>\\n\\n</ion-header>\\n\\n<ion-content class=\\\"firebase-listing-content\\\">\\n   <!------- Loading View ------->\\n <ion-grid style=\\\"height: 100%\\\" *ngIf=\\\"loading\\\">\\n  <ion-row justify-content-center align-items-center style=\\\"height: 100%; flex-direction: column\\\">\\n    <ion-spinner name=\\\"bubbles\\\" style=\\\"width:32px;height:32px;margin:0 auto;stroke:#222;fill:#444;text-align: center;\\\"></ion-spinner>\\n    <h5 style=\\\"text-align: center;columns: #555555;\\\">Loading Companies...</h5>\\n    </ion-row>\\n  </ion-grid>\\n <!------- Loading View ------->\\n\\n   <!------- Empty View ------->\\n   <ion-grid style=\\\"height: 100%\\\" *ngIf=\\\"listing && listing?.length <= 0 && !loading\\\">\\n    <ion-row justify-content-center align-items-center style=\\\"height: 100%; flex-direction: column\\\">\\n      <ion-icon src=\\\"./assets/sample-icons/side-menu/business.svg\\\" style=\\\"display:block;width:48px;height:48px;color:#444\\\"></ion-icon>\\n      <h5 style=\\\"text-align: center;columns: #555555;\\\">Looks like you have not registered a company yet.</h5>\\n      <ion-button class=\\\"promo-code-btn\\\" expand=\\\"block\\\" shape=\\\"round\\\" fill=\\\"outline\\\" color=\\\"claim\\\" (click)=\\\"createNewCompany()\\\">\\n        <span class=\\\"promo-code\\\">\\n         REGISTER COMPANY\\n        </span>\\n      </ion-button>\\n      </ion-row>\\n    </ion-grid>\\n   <!------- Empty View ------->\\n\\n      <ion-list class=\\\"items-list\\\" *ngIf=\\\"listing?.length > 0 && !loading\\\">     \\n        <ion-item class=\\\"list-item\\\" *ngFor=\\\"let item of listing\\\" [routerLink]=\\\"['/companies/details', item.id]\\\">\\n   \\n          <ion-row class=\\\"user-row\\\">\\n            <ion-col size=\\\"2\\\" class=\\\"user-image-wrapper\\\">\\n              <app-aspect-ratio [ratio]=\\\"{w: 1, h: 1}\\\">\\n                <app-image-shell class=\\\"user-image\\\" animation=\\\"spinner\\\" [mode]=\\\"'cover'\\\" [src]=\\\"item?.logo\\\" [alt]=\\\"'Company Logo'\\\"></app-image-shell>\\n              </app-aspect-ratio>\\n            </ion-col>\\n            <ion-col class=\\\"user-data-wrapper\\\">\\n              <div class=\\\"user-info\\\">\\n                <h3 class=\\\"user-name\\\">\\n                  <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"item?.title\\\"></app-text-shell>\\n                </h3>\\n           \\n       <h5 class=\\\"user-age\\\" *ngIf=\\\"item?.tagline\\\">\\n        <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"item?.tagline\\\"></app-text-shell>\\n      </h5>\\n\\n      <!-- <h5 class=\\\"user-age\\\" *ngIf=\\\"item?.website\\\">\\n        <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"item?.website\\\"></app-text-shell>\\n      </h5> -->\\n    \\n      <div *ngIf=\\\"!item.is_published\\\">\\n       <ion-badge class=\\\"schedule-closed\\\" color=\\\"danger\\\">Not Approved</ion-badge>\\n       </div>\\n\\n       <!-- <div class=\\\"amenities-wrapper\\\" style=\\\"margin-left: 0px;\\\">\\n        <ion-row class=\\\"amenities-tags\\\" style=\\\"margin-left: 0px;\\\">\\n          <ion-col class=\\\"tag-wrapper\\\" *ngFor=\\\"let skill of item?.jobAreas| slice:0:3\\\">\\n            <span class=\\\"amenity-tag\\\" style=\\\"color:white;\\\">\\n              <app-text-shell [data]=\\\"skill.title\\\"></app-text-shell>\\n            </span>\\n          </ion-col>\\n          <ion-col class=\\\"tag-wrapper\\\" *ngIf=\\\"item?.jobAreas.length > 3\\\">\\n            <span class=\\\"amenity-tag\\\" style=\\\"color:white;font-weight: bold;\\\">\\n              <app-text-shell [data]=\\\"'.. + '+(item?.jobAreas.length -3)+' more'\\\"></app-text-shell>\\n            </span>\\n          </ion-col>\\n         \\n        </ion-row>\\n      </div> -->\\n\\n\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n     \\n\\n  </ion-item>\\n     </ion-list>\\n     \\n     \\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { CompanyListingResolver } from '../companies.resolver';\nimport { CompanyService } from '../companies.service';\nimport { ComponentsModule } from '../../components/components.module';\nimport { CompaniesManagerPage } from './companies-manager.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CompaniesManagerPage,\n    resolve: {\n      data: CompanyListingResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ComponentsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CompaniesManagerPage],\n  providers: [\n    CompanyListingResolver,\n    CompanyService\n  ],\n  entryComponents: []\n})\nexport class CompaniesManagerPageModule {\n\n}\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { CompanyListingModel, CompanyModel } from '../../dbmodels/company-model';\nimport { ModalController } from '@ionic/angular';\nimport { ActivatedRoute, Route, Router } from '@angular/router';\nimport { CompanyService } from '../companies.service';\nimport { CreateCompanyModal } from '../create/create-company.modal';\nimport { ToastService } from '../../services/toast.service';\nimport { AuthConstants } from '../../config/AuthConstants';\nimport { LocalUser } from '../../dbmodels/local-user';\nimport { AuthService } from '../../services/auth.service';\nimport { StorageService } from '../../services/storage.service';\n\n@Component({\n  selector: 'app-companies-manager',\n  templateUrl: './companies-manager.page.html',\n  styleUrls: [\n    '../listing/styles/listing.page.scss',\n    '../listing/styles/listing.shell.scss',\n    '../listing/styles/company-listing.ios.scss',\n    '../../bluspecstyles/listing.page.scss'\n  ],\n})\nexport class CompaniesManagerPage implements OnInit {\n  listing: Array<CompanyModel>;\n  loading : boolean = true;\n  localUser: LocalUser;\n  \n  constructor(private companyService: CompanyService, \n    private route: ActivatedRoute, \n    private ngRouter: Router,\n    private toastService: ToastService,\n    private authService: AuthService,\n    private storageService: StorageService,\n    private modalController: ModalController) {\n\n  }\n\n  ionViewWillEnter(){\n      this.fetchFreshList(false);\n  } \n\n  ngOnInit() {\n    this.authService.getAuthCache().then(promisedValue=>{\n      this.localUser = promisedValue;\n      if(AuthConstants.DEV_MODE){\n        console.log(\"Local User: \"+this.localUser.id);\n      }\n    });\n\n    this.storageService.get(AuthConstants.MY_COMPANIES).then(companies=>{\n      if(companies){\n         if(companies.length > 0){\n            this.listing = companies;\n            this.loading = false;\n         }\n      }\n    });\n  }\n\n   loadCompanies(){\n    this.fetchFreshList(true);\n  }\n\n  async createNewCompany(){\n    //this.ngRouter.navigate(['create-company']);\n    const modal = await this.modalController.create({\n      component: CreateCompanyModal,\n      cssClass: 'fullscreen-modal-css'\n    });\n    await modal.present();\n  }\n\n  fetchFreshList(showLoading: boolean){\n    if(showLoading){this.loading = true;}\n    this.authService.getAuthCache().then(results =>{\n        if(results){\n              \n       this.companyService.getMyCompanies(results.api_key, {}).subscribe(\n        (res: any) => {\n          this.loading = false;\n          if(AuthConstants.DEV_MODE){\n            console.log(\"###### Companies List API Response: \"+JSON.stringify(res));\n          }\n        if (res.error) {\n          this.toastService.presentToast(res.message);\n        } else {\n          this.listing = res.items;\n          this.loading = false;\n          this.storageService.store(AuthConstants.MY_COMPANIES, res.items);  \n        }\n        },\n        (error: any) => {\n        this.toastService.presentToast('Looks like there is a Network Issue.'+error.message);\n        },\n        () => {\n          // complete callback\n         // this.loaderDismiss();\n      }\n        );\n        }\n    });\n }\n\n\n}\n"],"sourceRoot":"webpack:///","file":"manager-companies-manager-module-es5.js"}