{"version":3,"sources":["src/app/user/education-details/create/create-education-details.modal.html","src/app/utility-components/select-study-area/select-study-area.page.html","src/app/user/education-details/create/create-education-details.modal.ts","src/app/utility-components/select-study-area/select-study-area.page.ts","src/app/validators/checkbox-checked.validator.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<form class=\\\"update-user-form ion-page\\\" [formGroup]=\\\"createEduDetailForm\\\" (ngSubmit)=\\\"updateUser()\\\">\\n  <ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"end\\\">\\n        <ion-button (click)=\\\"dismissModal()\\\">\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"close\\\"></ion-icon>\\n        </ion-button>\\n      </ion-buttons>\\n      <ion-title>{{page_title}}</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <ion-content class=\\\"update-user-content\\\">\\n   \\n    <section class=\\\"user-details-fields fields-section\\\">\\n      <ion-list class=\\\"inputs-list\\\" lines=\\\"full\\\">\\n\\n      <ion-item class=\\\"input-item\\\">\\n        <ion-label color=\\\"secondary\\\" position=\\\"floating\\\">Select Education Level *</ion-label>\\n        <ion-select placeholder=\\\"Choose a level\\\" formControlName=\\\"level_id\\\" cancelText=\\\"Cancel\\\" okText=\\\"OK\\\" (ionChange)=\\\"onEduLevelSelected($event)\\\">\\n          <ion-select-option *ngFor=\\\"let item of eduLevels\\\" [value]=\\\"item.id\\\" >{{item.title}}</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n\\n      <ion-input type=\\\"hidden\\\" formControlName=\\\"study_area\\\" value=\\\"0\\\"></ion-input>\\n\\n      <ion-item class=\\\"input-item\\\" *ngIf=\\\"createEduDetailForm.value.level_id\\\">\\n        <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Select Study Area *</ion-label>\\n        <ion-input (ionFocus)=\\\"selectStudyArea()\\\" formControlName=\\\"study_area_name\\\" inputmode=\\\"none\\\" type=\\\"text\\\" readonly></ion-input>\\n      </ion-item>\\n\\n        <ion-item class=\\\"input-item\\\">\\n          <ion-label color=\\\"secondary\\\" position=\\\"floating\\\">Examination Title *</ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"title\\\" placeholder=\\\"e.g. AISSCE, KSBE\\\" required></ion-input>\\n        </ion-item>\\n        \\n        <ion-item class=\\\"input-item\\\">\\n          <ion-label color=\\\"secondary\\\" position=\\\"floating\\\">Organization *</ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"organization\\\" placeholder=\\\"School/College/University\\\" required></ion-input>\\n        </ion-item>\\n        \\n        <ion-item class=\\\"input-item\\\">\\n          <ion-label color=\\\"secondary\\\" position=\\\"floating\\\">Year of Joining *</ion-label>\\n          <ion-datetime display-format=\\\"YYYY\\\" picker-format=\\\"YYYY\\\" formControlName=\\\"yoj\\\" required></ion-datetime>\\n        </ion-item>\\n\\n        <ion-item class=\\\"input-item\\\">\\n          <ion-label class=\\\"toggle-label\\\">{{studyStatus}}</ion-label>\\n          <ion-toggle color=\\\"secondary\\\" formControlName=\\\"is_current\\\" (ionChange)=\\\"onCurrentOptionSelected($event)\\\"></ion-toggle>\\n        </ion-item>\\n\\n        <ion-item class=\\\"input-item\\\" *ngIf=\\\"!currentlyStudying\\\">\\n          <ion-label color=\\\"secondary\\\" position=\\\"floating\\\">Year of Passing *</ion-label>\\n          <ion-datetime display-format=\\\"YYYY\\\" picker-format=\\\"YYYY\\\" formControlName=\\\"yop\\\"></ion-datetime>\\n        </ion-item>\\n\\n        <ion-input *ngIf=\\\"currentlyStudying\\\" type=\\\"hidden\\\" formControlName=\\\"yop\\\" [value]=\\\"'Not yet'\\\" ></ion-input>\\n\\n        <ion-item class=\\\"input-item\\\">\\n          <ion-label color=\\\"secondary\\\" position=\\\"floating\\\">Score *</ion-label>\\n          <ion-input type=\\\"text\\\" maxLength=\\\"4\\\" formControlName=\\\"score\\\" placeholder=\\\"Marks/Grade obtained\\\" ></ion-input>\\n        </ion-item>\\n\\n        <ion-item class=\\\"input-item\\\">\\n          <ion-label color=\\\"secondary\\\" position=\\\"floating\\\">Score Type *</ion-label>\\n          <ion-select formControlName=\\\"score_type\\\" cancelText=\\\"Cancel\\\" okText=\\\"OK\\\">\\n            <ion-select-option *ngFor=\\\"let item of scoreTypes\\\" [value]=\\\"item\\\" >{{item}}</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n\\n        <ion-input type=\\\"hidden\\\" formControlName=\\\"user_id\\\"></ion-input>\\n        <!------------------>\\n\\n        \\n      </ion-list>\\n    </section>\\n\\n  </ion-content>\\n\\n  <ion-footer>\\n    <ion-row class=\\\"form-actions-wrapper\\\">\\n      <ion-col>\\n        <ion-button class=\\\"submit-btn\\\" expand=\\\"block\\\" color=\\\"secondary\\\" type=\\\"submit\\\" fill=\\\"solid\\\" [disabled]=\\\"!createEduDetailForm.valid\\\">SAVE DETAIL</ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-footer>\\n</form>\\n\"","export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"dismissModal()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"close\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Select Study Area</ion-title>\\n  </ion-toolbar>\\n\\n  <ion-toolbar class=\\\"filters-toolbar\\\">\\n    <ion-row class=\\\"searchbar-row\\\" align-items-center>\\n      <ion-col>\\n        <ion-searchbar class=\\\"items-searchbar\\\" animated mode=\\\"ios\\\" [(ngModel)]=\\\"searchQuery\\\" (ionChange)=\\\"searchList()\\\" placeholder=\\\"Search Study Areas\\\"></ion-searchbar>\\n      </ion-col>\\n    </ion-row>\\n    </ion-toolbar>\\n\\n</ion-header>\\n\\n<ion-content>\\n\\n <!------- Loading View ------->\\n <ion-grid style=\\\"height: 100%\\\" *ngIf=\\\"loading\\\">\\n  <ion-row justify-content-center align-items-center style=\\\"height: 100%; flex-direction: column\\\">\\n    <ion-spinner name=\\\"bubbles\\\" style=\\\"width:32px;height:32px;margin:0 auto;stroke:#222;fill:#444;text-align: center;\\\"></ion-spinner>\\n    <h5 style=\\\"text-align: center;columns: #555555;\\\">Loading Study Areas...</h5>\\n    </ion-row>\\n  </ion-grid>\\n <!------- Loading View ------->\\n\\n  <!------- Empty View ------->\\n  <ion-grid style=\\\"width:100%;height: 100%;display:block;align-content: center;\\\" *ngIf=\\\"listing?.length == 0 && !loading\\\">\\n    <ion-row justify-content-center align-items-center style=\\\"height: 100%; flex-direction: column\\\">\\n      <ion-icon src=\\\"./assets/sample-icons/side-menu/study_area.svg\\\" style=\\\"display: block;font-size:48px;\\\"></ion-icon>\\n      <h5 style=\\\"text-align: center;color: #555555;\\\">No Study Area found</h5>\\n      </ion-row>\\n    </ion-grid>\\n   <!------- Empty View ------->\\n\\n  <ion-list class=\\\"\\\" *ngIf=\\\"listing?.length > 0 && !loading\\\">     \\n    <ion-item class=\\\"list-item\\\" *ngFor=\\\"let item of listing\\\" (click)=\\\"dismissModal(item)\\\">\\n      <ion-row class=\\\"user-row\\\">\\n\\n        <ion-col class=\\\"user-data-wrapper\\\">\\n          <div class=\\\"user-info\\\">\\n            <h5 class=\\\"user-name\\\">\\n              <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"item?.title\\\"></app-text-shell>\\n            </h5>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n \\n\\n</ion-item>\\n </ion-list>\\n\\n</ion-content>\\n\\n<ion-footer style=\\\"background-color:#eeeeee;\\\">\\n  <ion-row class=\\\"details-purchase-options-row\\\">\\n    <ion-col size=\\\"12\\\">\\n      <ion-button class=\\\"select-variant-btn\\\" color=\\\"primary\\\" expand=\\\"block\\\" fill=\\\"solid\\\" (click)=\\\"openSizeChooser()\\\">SELECT</ion-button>\\n    </ion-col>\\n  </ion-row>\\n\\n</ion-footer>\\n\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController, AlertController, LoadingController } from '@ionic/angular';\nimport { Validators, FormGroup, FormControl, FormArray } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { EducationDetailsModel } from '../education-details.model';\nimport { UserService } from '../../user.service';\nimport { MasterService } from '../../../services/master.service';\nimport { ToastService } from '../../../services/toast.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { LocalUser } from '../../../dbmodels/local-user';\nimport { StorageService } from '../../../services/storage.service';\nimport { AuthConstants } from '../../../config/AuthConstants';\nimport { SelectStudyAreaPage } from '../../../utility-components/select-study-area/select-study-area.page';\n\n@Component({\n  selector: 'app-create-education-details',\n  templateUrl: './create-education-details.modal.html',\n  styleUrls: [\n    '../../../bluspecstyles/create.modal.scss',\n    '../../../bluspecstyles//create.shell.scss'\n  ]\n})\nexport class CreateEducationDetailsModal implements OnInit {\n  @Input() user_id: number;\n  user: EducationDetailsModel = new EducationDetailsModel(); \n  profilerID : any;\n  localUser: LocalUser;\n  createEduDetailForm: FormGroup;\n  eduLevels = [];\n  scoreTypes = [];\n  deleteResult : any;\n  updateResult : any;\n  currentlyStudying: boolean = false;\n  studyStatus = 'Already passed out.';\n  moderateMode : boolean = false;\n  selected_education_level : number;\n\n  page_title = \"Add Education Detail\";\n  constructor(private modalController: ModalController,\n    public alertController: AlertController,\n    public firebaseService: UserService,\n    public masterService: MasterService,\n    private authService: AuthService,\n    private storageService: StorageService,\n    public toastService:ToastService,\n    public loadingController: LoadingController,\n    private route: ActivatedRoute,\n    public router: Router) {\n     \n  }\n\n  ngOnInit() {\n    this.initializeForm(); \n    this.onHandleFormChanges(); \n    this.scoreTypes = [\"Percent\", \"Grade\"];\n    this.authService.getAuthCache().then(promisedValue=>{\n      this.localUser = promisedValue;\n      this.profilerID = this.user_id;\n      this.createEduDetailForm.controls.user_id.patchValue(this.profilerID);\n    });\n    \n   this.masterService.getEducationLevels().subscribe(thisLevels => {\n    if(thisLevels){\n      this.eduLevels = thisLevels.result;\n      console.log(\"/********* Got Education Levels **********/ => \"+JSON.stringify(this.eduLevels));\n      this.storageService.store(AuthConstants.EDU_LEVELS, thisLevels.result);\n      this.eduLevels.map((eduLevel) => {\n        //Waiting to do something on getting First Master Data\n        //this.updateEduDetailForm.controls.level_id.patchValue(this.eduLevels[0].id);\n      });\n    }\n  });\n\n  }\n\n\n  initializeForm(){\n    /************ CREATE UPDATE FORM ************/\n      this.moderateMode = false;\n      this.createEduDetailForm = new FormGroup({\n       user_id: new FormControl('', Validators.required),\n       level_id: new FormControl('', Validators.required),\n       study_area: new FormControl('', Validators.required),\n       study_area_name: new FormControl('', Validators.required),\n       title: new FormControl('', Validators.required),\n       organization: new FormControl('', Validators.required),\n       yoj: new FormControl('', Validators.required),\n       is_current: new FormControl(false),\n       yop: new FormControl('', Validators.required),      \n       score: new FormControl(''),\n       score_type: new FormControl(this.scoreTypes[0])\n     });\n  }\n\n  get skillsFormArray() { return <FormArray>this.createEduDetailForm.get('jobAreas'); }\n\n  dismissModal() {\n   this.modalController.dismiss();\n  }\n\n  async selectStudyArea() {\n    const modal = await this.modalController.create({\n      component: SelectStudyAreaPage,\n      componentProps: {\n        'multiple': false,\n        'selected_education_level': this.selected_education_level\n      }\n    });\n    modal.onDidDismiss().then(avatar => {\n      if (avatar.data != null) {\n        this.createEduDetailForm.patchValue({\n          study_area: avatar.data.id,\n          study_area_name : avatar.data.title\n        });\n        this.createEduDetailForm.get('study_area').updateValueAndValidity()\n        this.createEduDetailForm.get('study_area_name').updateValueAndValidity()\n      }\n    });\n    await modal.present();\n  }\n\n  updateUser() {\n    this.presentLoadingWithOptions();\n    this.user.user_id = this.createEduDetailForm.value.user_id;\n    this.user.level_id = this.createEduDetailForm.value.level_id;\n    this.user.title = this.createEduDetailForm.value.title;\n    this.user.organization = this.createEduDetailForm.value.organization;\n    this.user.yoj = this.createEduDetailForm.value.yoj;\n    this.user.yop = this.createEduDetailForm.value.yop;\n    this.user.is_current = this.currentlyStudying ? true : false;\n    this.user.score_type = this.createEduDetailForm.value.score_type;\n    this.user.score = this.createEduDetailForm.value.score;\n    this.user.study_area = this.createEduDetailForm.value.study_area;\n    console.log('########## Post params ########### '+JSON.stringify(this.user));\n    this.authService.getAuthKey().then(apiKey=>{\n    this.firebaseService.callEduDetailsCreateAPI(apiKey, this.user)\n      .subscribe(\n        (res: any) => {\n          this.loadingController.dismiss();\n  \n          console.log('########## API Response ########### '+JSON.stringify(res));\n          this.updateResult = res;\n          if (!res.error) {\n            /********** NAVIGATE WITH USER ID **********/\n            this.dismissModal();\n            if(AuthConstants.DEV_MODE){\n              console.log('########## API Successful ########### '+JSON.stringify(res));           \n            }\n            this.firebaseService.getEduDataSource(this.localUser.api_key, this.localUser.id).subscribe(results=>{\n              this.firebaseService.invokeEduListChangeEvent.next(results);\n            });\n           this.toastService.presentToast(res.message);\n           this.router.navigate(['/education-details/listing', this.user_id]);\n            } else {\n              this.presentAlert(res.message);\n            }\n        },\n        (error: any) => {\n         this.loadingController.dismiss();\n        this.presentAlert('Looks like there is a Network Issue.'+error.message);\n        }\n        );\n    \n    });\n\n  }\n\n  onEduLevelSelected(e) {\n    this.selected_education_level = e.target.value;\n  }\n\n  onCurrentOptionSelected(e){\n    if(AuthConstants.DEV_MODE){\n      console.log(\"onCurrentOptionSelected: \"+e.target.value);\n    }\n    this.currentlyStudying = !this.currentlyStudying;\n    if(!this.currentlyStudying){\n      this.studyStatus = 'Already passed out.';\n      //this.updateEduDetailForm.addControl('yop', new FormControl(''));\n    }else{\n      this.studyStatus = 'Currently Persuing.';\n      //this.updateEduDetailForm.removeControl('yop');\n    }\n    \n  }\n\n  onHandleFormChanges(): void {\n\n    this.createEduDetailForm.get(\"is_current\").valueChanges.subscribe(val=>{\n      if(val){\n        this.createEduDetailForm.get('yop').clearValidators();\n        this.createEduDetailForm.get('yop').updateValueAndValidity();\n      }else{\n        this.createEduDetailForm.get('yop').setValidators([Validators.required, Validators.maxLength(4)]);\n        this.createEduDetailForm.get('yop').updateValueAndValidity();\n      }\n    });\n\n\n    this.createEduDetailForm.valueChanges.subscribe(val => {\n      console.log(\"/********* onHandleFormChanges **********/\");\n        let yoj = val.yoj;\n        let yop =  val.yop;\n        let score =  val.score;\n        if(yop && yoj){\n        if(yop < yoj){\n          this.presentAlert(\"Year of passing must be after the year of joining.\");\n          }\n        }\n\n        let score_type =  val.score_type;\n        if(score_type && !score){\n        if(score_type == \"Grade\" && !score){\n          this.presentAlert(\"Please enter the grade you obtained.\");\n        }else{\n          if(score_type == \"Percent\" && !score){\n            this.presentAlert(\"Please enter the percentage you obtained.\");\n          }\n        }\n      }\n\n    });\n  }\n\n  private async presentAlert(message: string): Promise<HTMLIonAlertElement> {\n    const alert = await this.alertController.create({\n      header: 'Alert',\n      subHeader: '',\n      message: message,\n      buttons: ['OK']\n    });\n    await alert.present();\n    return alert;\n  }\n\n  async presentLoadingWithOptions() {\n    const loading = await this.loadingController.create({\n      duration: 5000,\n      animated:true,\n      spinner: \"bubbles\",\n      message: 'Please wait...',\n      translucent: true,\n      cssClass: 'custom-class custom-loading'\n    });\n    return await loading.present();\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { JobAreaModel } from '../../dbmodels/job-areas';\nimport { AuthConstants } from '../../config/AuthConstants';\nimport { NavController, ModalController } from '@ionic/angular';\nimport { StorageService } from '../../services/storage.service';\nimport { StudyAreaModel } from '../../dbmodels/study-area';\nimport { LocalUser } from '../../dbmodels/local-user';\nimport { FormGroup, FormArray, FormControl } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { MasterService } from '../../services/master.service';\nimport { CheckboxCheckedValidator } from '../../validators/checkbox-checked.validator';\n\n@Component({\n  selector: 'app-select-study-area',\n  templateUrl: './select-study-area.page.html',\n  styleUrls: ['../../bluspecstyles/listing.page.scss',\n  '../../bluspecstyles/listing.shell.scss',\n  '../../bluspecstyles/listing.ios.scss']\n})\nexport class SelectStudyAreaPage implements OnInit {\n  @Input() multiple = false;\n  @Input() selected_education_level : number;\n listing: StudyAreaModel[];\n filtered_listing: StudyAreaModel[];\n searchQuery: string;\n loading : boolean = true;\n selectedSkills: Array<StudyAreaModel> = new Array();\n displayIDs: any;\n localUser:LocalUser;\n\n addSkillsForm: FormGroup;\n\n constructor(public navCtrl: NavController, private masterService: MasterService,\n   private storageService: StorageService,\n   private modalController:ModalController,\n   private authService: AuthService) {\n     this.authService.getAuthCache().then(promisedValue=>{\n       this.localUser = promisedValue;\n     });\n }\n\n ngOnInit() {\n   this.addSkillsForm = new FormGroup({\n     skills: new FormArray([], CheckboxCheckedValidator.minSelectedCheckboxes(1))\n   });\n\n   this.storageService.get(AuthConstants.STUDY_AREAS).then(allList=>{\n     if(allList){\n        this.listing = allList;\n        this.filtered_listing = allList;\n        this.loading = false;\n        if(AuthConstants.DEV_MODE){\n          console.log(\"All Study Areas : \"+JSON.stringify(allList));\n        }\n\n        if(AuthConstants.DEV_MODE){\n          console.log(\"Selected_education_level : \"+this.selected_education_level+\" among \"+allList.length);         \n           }\n\n        if(this.selected_education_level > 0){\n          if(AuthConstants.DEV_MODE){\n         console.log(\"Filtering for Single Area : \"+this.selected_education_level+\" among \"+allList.length);         \n          }\n          allList = allList.filter(item => item.education_level === this.selected_education_level);\n\n         this.listing = allList;\n         this.filtered_listing = allList;\n\n         if(AuthConstants.DEV_MODE){\n         console.log(\"Total Filtered : \"+allList.length);\n         }\n         this.listing.map((item) => {\n           (this.addSkillsForm.controls.skills as FormArray).push(new FormControl());\n         });\n\n        }\n     }\n   });\n }\n\n get skillsFormArray() { return <FormArray>this.addSkillsForm.get('skills'); }\n\n loadItems(){\n   this.loading = true;\n  this.masterService.getSkills().subscribe(allData=>{\n   this.loading = false;\n    if(allData){\n     this.listing = allData.result;\n     this.filtered_listing = allData.result;\n    }\n  });\n }\n\n initializeItems() {\n   this.listing = this.filtered_listing;\n }\n\n/****************** SEARCH ITEMS ********************/\nsearchList() {\n this.initializeItems();\n  this.listing = this.listing.filter((thisJob) => {\n   return thisJob.title.toLowerCase().indexOf(this.searchQuery.toLowerCase()) > -1\n });\n\n this.updateFormArrayDisplay();\n}\n\nupdateFormArrayDisplay(){\n const control = <FormArray>this.addSkillsForm.controls.skills;\n for(let i = control.length-1; i >= 0; i--) {\n   control.removeAt(i)\n }\n\n this.listing.map((item) => {\n   (this.addSkillsForm.controls.skills as FormArray).push(new FormControl());\n });\n}\n/****************** SEARCH ITEMS ********************/\n\ndismissModal(item: any) {\n //alert(item.title+\" \"+this.multiple);\n this.modalController.dismiss(item);\n}\n\ncloseModal() {\n this.modalController.dismiss();\n}\n\ncontainsObject(obj: StudyAreaModel, list:StudyAreaModel[]) {\n if(list && list.length > 0){\n   let i;\n for (i = 0; i < list.length; i++) {\n     if (list[i].id === obj.id) {\n         return true;\n     }\n }\n }\n return false;\n}\n\nonJobSkillSelected(thisSkill:any){\n if(this.containsObject(thisSkill, this.selectedSkills)){\n   console.log(\"#####: Exists Already \");\n }else{\n   this.selectedSkills.push(thisSkill);\n   console.log(\"#####: Doesnt Exist \");\n }\n  console.log(\"#####: FINAL SELECTION =>  \"+JSON.stringify(this.selectedSkills));\n}\n\nprocessMultipleSelection(){\n let displayNames = Array.prototype.map.call(this.selectedSkills, function(item) { return item.title; }).join(\", \");\n this.displayIDs = Array.prototype.map.call(this.selectedSkills, s => s.id).toString();\n console.log(\"#####: FINAL displayNames =>  \"+displayNames);\n console.log(\"#####: FINAL displayIDs =>  \"+this.displayIDs);\n let resultArr = [];\n resultArr[\"id\"] = this.displayIDs;\n resultArr[\"title\"] = displayNames;\n this.modalController.dismiss(resultArr);\n}\n\nisSkillSelected(id:number){\n this.selectedSkills.forEach( (element) => {\n   if(element.id == id){\nreturn true;\n   }\n});\nreturn false;\n}\n\n}\n","import { ValidatorFn, FormArray } from '@angular/forms';\n\nexport class CheckboxCheckedValidator {\n\n  static minSelectedCheckboxes(min) {\n    const validator: ValidatorFn = (formArray: FormArray) => {\n      const totalSelected = formArray.controls\n        // get a list of checkbox values (boolean)\n        .map(control => control.value)\n        // total up the number of checked checkboxes\n        .reduce((prev, next) => next ? prev + next : prev, 0);\n\n      // if the total is not greater than the minimum, return the error message\n      return totalSelected >= min ? null : { required: true };\n    };\n\n    return validator;\n  }\n}\n"],"sourceRoot":"webpack:///","file":"default~profile-user-profile-module~user-education-details-education-details-integration-module~user~9c8810c2-es5.js"}