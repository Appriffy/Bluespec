{"version":3,"sources":["src/app/jobs/listing/jobs-listing.page.html","src/app/jobs/listing/jobs-listing.module.ts","src/app/jobs/listing/jobs-listing.page.ts","src/app/jobs/listing/jobs-listing.resolver.ts","src/app/utility-components/select-currency/select-currency.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"dashboard\\\"></ion-back-button>\\n    </ion-buttons>\\n    \\n    <ion-title>Job Requests</ion-title>\\n\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button fill=\\\"clear\\\" color=\\\"light\\\" class=\\\"filters-btn\\\" (click)=\\\"loadJobsFromServer()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"refresh\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n\\n  <ion-toolbar class=\\\"filters-toolbar\\\">\\n    <ion-row class=\\\"searchbar-row\\\" align-items-center>\\n      <ion-col>\\n        <ion-searchbar class=\\\"items-searchbar\\\" animated mode=\\\"ios\\\" [(ngModel)]=\\\"searchQuery\\\" (ionChange)=\\\"searchList()\\\" placeholder=\\\"Search jobs...\\\"></ion-searchbar>\\n      </ion-col>\\n      <ion-col class=\\\"call-to-action-col\\\">      \\n        <ion-button fill=\\\"clear\\\" color=\\\"primary\\\" class=\\\"filters-btn\\\" (click)=\\\"showJobFilterScreen()\\\">\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"options\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n    </ion-toolbar>\\n\\n</ion-header>\\n\\n<ion-content class=\\\"deals-listing-content\\\">\\n\\n\\n  <!------- Loading View ------->\\n  <ion-grid style=\\\"height: 100%\\\" *ngIf=\\\"loading\\\">\\n    <ion-row justify-content-center align-items-center style=\\\"height: 100%; flex-direction: column\\\">\\n      <ion-spinner name=\\\"bubbles\\\" style=\\\"width:32px;height:32px;margin:0 auto;stroke:#222;fill:#444;text-align: center;\\\"></ion-spinner>\\n      <h5 style=\\\"text-align: center;columns: #555555;\\\">Finding Jobs...</h5>\\n      </ion-row>\\n    </ion-grid>\\n   <!------- Loading View ------->\\n  \\n     <!------- Empty View ------->\\n     <ion-grid style=\\\"height: 100%\\\" *ngIf=\\\"listing.items?.length <= 0 && !loading\\\">\\n      <ion-row justify-content-center align-items-center style=\\\"height: 100%; flex-direction: column\\\">\\n        <ion-icon src=\\\"./assets/sample-icons/side-menu/briefcase.svg\\\" style=\\\"display:block;width:48px;height:48px;color:#444\\\"></ion-icon>\\n        <h5 style=\\\"text-align: center;columns: #555555;\\\">No Job Found</h5>\\n        <ion-button class=\\\"promo-code-btn\\\" expand=\\\"block\\\" shape=\\\"round\\\" fill=\\\"outline\\\" color=\\\"claim\\\" (click)=\\\"showJobFilterScreen()\\\">\\n          <span class=\\\"promo-code\\\">\\n           FILTER JOBS\\n          </span>\\n        </ion-button>\\n        </ion-row>\\n      </ion-grid>\\n     <!------- Empty View ------->\\n\\n  <ng-container *ngIf=\\\"listing?.items && !loading\\\">\\n    <ion-toolbar color=\\\"secondary\\\" class=\\\"ion-padding\\\" *ngIf=\\\"appSettings && appSettings.debugMode\\\">\\n      <p>Debug Mode ON: {{jobFilterArr|json}}</p>\\n   </ion-toolbar>\\n    <!-- <p>Filters: {{jobFilterArr|json}}</p> -->\\n    <!-- <p>{{listing.items.length}} Professionals found within {{jobFilterArr.search_radius}} K.m</p> -->\\n   \\n    <div class=\\\"listing-item\\\" *ngFor=\\\"let item of listing.items\\\" [ngClass]=\\\"{'ended': ((item.expirationDate | appTimeDifference) < 0), 'imminent-end': ((item.expirationDate | appTimeDifference) > 0 && (item.expirationDate | appTimeDifference) <= 2), 'ends-soon': ((item.expirationDate | appTimeDifference) > 0 && (item.expirationDate | appTimeDifference) > 2 && (item.expirationDate | appTimeDifference) < 10), 'distant-end': ((item.expirationDate | appTimeDifference) >= 10)}\\\">\\n      \\n      <ion-row class=\\\"top-row\\\">\\n        <ion-col class=\\\"info-col\\\">\\n          <h4 class=\\\"item-name\\\">\\n            <a class=\\\"name-anchor\\\" [routerLink]=\\\"['/jobs/details', item.qcode]\\\">\\n              <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"item.title\\\"></app-text-shell>\\n            </a>\\n          </h4>\\n\\n          <ion-badge *ngIf=\\\"item && item.job_type_name\\\" style=\\\"margin-left: 0px;\\\" class=\\\"status-label\\\" color=\\\"facebook\\\">{{item.job_type_name}}</ion-badge>\\n          &nbsp; <ion-badge *ngIf=\\\"item && item.job_area_name\\\" style=\\\"margin-left: 0px;\\\" class=\\\"status-label\\\" color=\\\"facebook\\\">{{item.job_area_name}} </ion-badge>\\n\\n        </ion-col> \\n        <ion-col class=\\\"user-actions-wrapper\\\">\\n          <!-- <ion-button class=\\\"bookmark-button\\\" fill=\\\"clear\\\" color=\\\"claim\\\">\\n            <span class=\\\"accommodation-value\\\" *ngIf=\\\"item.salary_type == 'monthly'\\\">\\n              <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"item.currency+' '+item.jobSalary.min_salary+' - '+item.jobSalary.max_salary\\\"></app-text-shell>\\n            </span>\\n            <span class=\\\"accommodation-value\\\" *ngIf=\\\"item.salary_type == 'hourly'\\\">\\n              <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"item.currency+' '+item.jobSalary.min_rate_per_hour+' - '+item.jobSalary.max_rate_per_hour\\\"></app-text-shell>\\n            </span>\\n            <span class=\\\"accommodation-value\\\" *ngIf=\\\"item.salary_type == 'fixed'\\\">\\n              <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"item.currency+' '+item.jobSalary.fixed_fee\\\"></app-text-shell>\\n            </span>\\n          </ion-button> -->\\n\\n          <h4 class=\\\"bookmark-button\\\" fill=\\\"clear\\\" color=\\\"claim\\\">\\n            <span class=\\\"accommodation-value\\\" *ngIf=\\\"item.job_salary && item.salary_type == 'monthly'\\\">\\n              <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"item.currency+' '+item.job_salary\\\"></app-text-shell>\\n            </span>\\n            <span class=\\\"accommodation-value\\\" *ngIf=\\\"item.job_salary && item.salary_type == 'hourly'\\\">\\n              <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"item.currency+' '+item.job_salary\\\"></app-text-shell>\\n            </span>\\n            <span class=\\\"accommodation-value\\\" *ngIf=\\\"item.job_salary && item.salary_type == 'fixed'\\\">\\n              <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"item.currency+' '+item.job_salary\\\"></app-text-shell>\\n            </span>\\n            <span class=\\\"accommodation-value\\\" *ngIf=\\\"!item.job_salary && item.salary_type == ''\\\">\\n              <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"'N/A'\\\"></app-text-shell>\\n            </span>\\n          </h4>\\n\\n          <h5 class=\\\"user-job\\\" style=\\\"font-size: 12px;line-height: 12px;margin-top: 0px;\\\" *ngIf=\\\"item && item.salary_type\\\">\\n            <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"item.salary_type|titlecase\\\"></app-text-shell>\\n          </h5>\\n\\n        </ion-col>\\n      </ion-row>\\n\\n\\n      <ion-row class=\\\"middle-row\\\">\\n        <ion-col class=\\\"info-col\\\">\\n             <!-- <ion-badge style=\\\"margin-left: 0px;\\\" class=\\\"status-label\\\" color=\\\"facebook\\\"><ion-icon name=\\\"briefcase\\\"></ion-icon> {{item.job_type_name}} </ion-badge>\\n            &nbsp;<ion-badge style=\\\"margin-left: 0px;\\\" class=\\\"status-label\\\" color=\\\"facebook\\\"><ion-icon name=\\\"construct\\\"></ion-icon> {{item.job_area_name}} </ion-badge>\\n            -->\\n\\n          <p class=\\\"item-description\\\" *ngIf=\\\"item.address\\\"><ion-icon name=\\\"locate\\\" style=\\\"display:inline-block;font-size:13px;line-height:14px;vertical-align: middle;\\\"></ion-icon> <app-text-shell style=\\\"display:inline-block;vertical-align: middle;\\\" animation=\\\"bouncing\\\" [data]=\\\"item.address\\\">\\n          </app-text-shell></p>\\n          \\n          <p class=\\\"item-description\\\" *ngIf=\\\"item.distance && appSettings && appSettings.debugMode\\\"><ion-icon name=\\\"navigate\\\" style=\\\"display:inline-block;font-size:13px;line-height:14px;vertical-align: middle;\\\"></ion-icon> <app-text-shell style=\\\"display:inline-block;vertical-align: middle;\\\" animation=\\\"bouncing\\\" [data]=\\\"item.distance+' Km away'\\\">\\n          </app-text-shell></p>\\n\\n          <p class=\\\"item-description\\\" style=\\\"margin-top:10px;\\\">\\n            <app-text-shell animation=\\\"bouncing\\\" lines=\\\"3\\\" [data]=\\\"item.job_description\\\"></app-text-shell>\\n          </p>\\n        \\n\\n          <ion-row class=\\\"item-tags\\\" *ngIf=\\\"item.jobSkills.length > 0\\\">\\n            <ion-col class=\\\"tag-wrapper\\\">\\n              <span class=\\\"item-tag\\\" style=\\\"display: inline-block;vertical-align: middle;border:none;font-size: 13px;\\n              font-weight: 500;\\\">Required Skills: </span></ion-col>\\n            <ion-col class=\\\"tag-wrapper\\\" *ngFor=\\\"let skill of item.jobSkills\\\">\\n              <span class=\\\"item-tag\\\" style=\\\"display: inline-block;\\\">\\n                <app-text-shell animation=\\\"bouncing\\\" style=\\\"display: inline-block;vertical-align: middle;\\\" [data]=\\\"skill.title\\\"></app-text-shell>\\n              </span>\\n            </ion-col>\\n          </ion-row>\\n\\n        </ion-col>\\n        \\n      </ion-row>\\n      <ion-row class=\\\"bottom-row\\\">\\n        <!-- <ion-col class=\\\"code-wrapper\\\">\\n          <span class=\\\"item-code\\\" [ngClass]=\\\"{'expired': ((item.expirationDate | appTimeDifference) < 0)}\\\">\\n            <app-text-shell [data]=\\\"item.job_type_name\\\"></app-text-shell>\\n          </span>\\n    \\n        </ion-col> -->\\n\\n        <ion-col *ngIf=\\\"((item.expirationDate | appTimeDifference) > 0)\\\" class=\\\"call-to-action-col\\\">\\n          <ion-button class=\\\"claim-button\\\" expand=\\\"block\\\" color=\\\"claim\\\" [routerLink]=\\\"['/jobs/details', item.qcode]\\\">\\n            <span class=\\\"button-cta\\\">ACCEPT</span>\\n            <ion-icon slot=\\\"end\\\" name=\\\"ios-arrow-forward\\\"></ion-icon>\\n          </ion-button>\\n        </ion-col>\\n        <ion-col *ngIf=\\\"((item.expirationDate | appTimeDifference) <= 0)\\\" class=\\\"call-to-action-col\\\">\\n          <span class=\\\"expired-cta\\\">EXPIRED</span>\\n        </ion-col>\\n        \\n        <ion-col class=\\\"time-left-wrapper\\\" size=\\\"5\\\" [ngClass]=\\\"{'countdown-active': ((item.expirationDate | appTimeDifference) > 0 && (item.expirationDate | appTimeDifference) <= 2)}\\\">\\n          <span class=\\\"expiration-cta\\\">JOB {{ ((item.expirationDate | appTimeDifference) < 0) ? 'EXPIRED' : 'EXPIRES IN' }}:</span>\\n          <ng-container *ngIf=\\\"((item.expirationDate | appTimeDifference) < 0 || (item.expirationDate | appTimeDifference) > 2)\\\">\\n            <span class=\\\"item-time-left\\\">\\n              <app-text-shell [data]=\\\"(item.expirationDate | appTimeAgo)\\\"></app-text-shell>\\n            </span>\\n          </ng-container>\\n          <ng-container *ngIf=\\\"((item.expirationDate | appTimeDifference) > 0 && (item.expirationDate | appTimeDifference) <= 2)\\\">\\n            <ion-row class=\\\"countdown-wrapper\\\">\\n              <app-countdown-timer class=\\\"item-countdown\\\" fill=\\\"inner-time\\\" [end]=\\\"item.expirationDate\\\" [units]=\\\"{from: 'hour', to: 'second'}\\\"></app-countdown-timer>\\n            </ion-row>\\n          </ng-container>\\n        </ion-col>\\n      </ion-row>\\n    </div>\\n  </ng-container>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\nimport { JobListingPage } from './jobs-listing.page';\nimport { JobListingResolver } from './jobs-listing.resolver';\nimport { JobService } from '../jobs.service';\nimport { JobFilterPage } from './job-filter/job-filter.page';\nimport { SelectJobSkillPage } from '../../utility-components/select-job-skill/select-job-skill.page';\nimport { SelectJobAreaPage } from '../../utility-components/select-job-area/select-job-area.page';\nimport { UtilityComponentsModule } from '../../utility-components/utility-components.module';\nimport { SelectJobSkillPageModule } from '../../utility-components/select-job-skill/select-job-skill.module';\nimport { SelectCurrencyPageModule } from '../../utility-components/select-currency/select-currency.module';\nimport { SelectCurrencyPage } from '../../utility-components/select-currency/select-currency.page';\nimport { LocationAutocompletePage } from '../../bluspec-recruiter/location-autocomplete/location-autocomplete.page';\nimport { LocationAutocompletePageModule } from '../../bluspec-recruiter/location-autocomplete/location-autocomplete.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: JobListingPage,\n    resolve: {\n      data: JobListingResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    UtilityComponentsModule,\n    LocationAutocompletePageModule,\n    SelectJobSkillPageModule,\n    SelectCurrencyPageModule,\n    PipesModule,\n    HttpClientModule\n  ],\n  declarations: [\n    JobListingPage, JobFilterPage\n  ],\n  providers: [\n    JobListingResolver,\n    JobService\n  ],\n  entryComponents: [JobFilterPage, LocationAutocompletePage, SelectJobAreaPage, SelectJobSkillPage, SelectCurrencyPage]\n})\nexport class JobListingPageModule {}\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n\nimport { JobFilterPage } from './job-filter/job-filter.page';\nimport { ModalController } from '@ionic/angular';\nimport { JobService } from '../jobs.service';\nimport { JobListingModel } from '../../dbmodels/jobs-listing.model';\nimport { LocalUser } from '../../dbmodels/local-user';\nimport { AuthService } from '../../services/auth.service';\nimport { ToastService } from '../../services/toast.service';\nimport { AuthConstants } from '../../config/AuthConstants';\nimport { JobFilterCache } from '../../dbmodels/job-filter-cache';\nimport { StorageService } from '../../services/storage.service';\nimport { SettingsModel } from '../../dbmodels/settings-model';\n\n@Component({\n  selector: 'app-deals-listing',\n  templateUrl: './jobs-listing.page.html',\n  styleUrls: [\n    './styles/deals-listing.page.scss',\n    './styles/deals-listing.shell.scss',\n    './styles/deals-listing.ios.scss'\n  ],\n})\nexport class JobListingPage implements OnInit {\n  listing: JobListingModel;\n  filtered_listing: JobListingModel;\n  searchQuery: string;\n  jobFilterArr: JobFilterCache;\n  localUser: LocalUser;\n  loading = false;\n  appSettings: SettingsModel;\n  //Selected params\n  skillID : number = 0;\n  jobArea : number = 0;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.listing && this.listing.isShell) ? true : false;\n  }\n\n  fetchFiltersFromService(){\n    this.jobFilterArr = this.jobService.getFilterData();\n    if(AuthConstants.DEV_MODE){\n      console.log(\"fetchFiltersFromService() => \"+JSON.stringify(this.jobFilterArr));\n    }\n  }\n\n  constructor(private jobService: JobService, private route: ActivatedRoute, \n    private authService: AuthService,\n    private storageService: StorageService,\n    private toastService: ToastService,\n    private modalController: ModalController) { }\n\n  ngOnInit(): void {\n    //Just get fresh every time via Constructor unless required\n    this.jobFilterArr = this.jobService.getFilterData(); \n     this.jobService.invokeFilterChangeEvent.subscribe(newFilter =>{\n       if(newFilter){\n       this.jobFilterArr = newFilter;\n       //Enable Server Filter\n       this.loadJobsFromServer(true);\n       //Enable Local Filter\n       //this.filterJobs();\n       console.log(\"NEW FILTER: \"+JSON.stringify(newFilter));\n       }\n     });\n\n    this.route.params.subscribe(params => {\n      if(params.get(\"skillID\")){\n        this.skillID = params['skillID'];\n        console.log(\"GOT SKILL via Route: \"+this.skillID);\n      }\n      if(params.get(\"jobArea\")){\n        this.jobArea = params['jobArea'];\n      }\n      \n      });\n\n    this.route.data.subscribe((resolvedRouteData) => {\n      const listingDataStore = resolvedRouteData['data'];\n      if(AuthConstants.DEV_MODE){\n      console.log(\"ROUTE BASED JOB DETAILS HERE \"+ JSON.stringify(listingDataStore));\n      }\n      listingDataStore.state.subscribe(\n        (state) => {\n          this.listing = state;\n          console.log(\"JOB DETAILS HERE \"+ JSON.stringify(this.listing));\n        },\n        (error) => {}\n      );\n    },\n    (error) => {})\n\n    this.storageService.get(AuthConstants.APP_SETTINGS).then(appSettings=>{\n      if(appSettings){\n        this.appSettings = appSettings;\n        if(AuthConstants.DEV_MODE){\n          console.log(\"AppSettings: \"+JSON.stringify(appSettings));\n        }\n      }\n    });\n\n    this.loadJobsFromServer();\n  }\n\n  loadJobsFromServer(withFilter = false){\n    this.loading = true;\n    this.authService.getAuthCache().then(results =>{\n      if(results){\n        let postData = {\n          skillID: \"\"+this.skillID,\n          jobArea: this.jobArea\n        }\n        if(withFilter){\n          postData = this.jobFilterArr;\n        }\n        console.log(\"FETCH JOBS FROM SERVICE WITH FILTER => \"+ JSON.stringify(this.jobFilterArr));\n        this.jobService.getListingDataSource(results.api_key, postData).subscribe(resultData=>{\n          if(resultData){\n             if(AuthConstants.DEV_MODE){\n              console.log(\"JOBS FETCHED FROM SERVICE: \"+ JSON.stringify(resultData));\n             }\n             this.listing = resultData;\n             this.loading = false;\n          }\n        });\n      }\n    });\n\n  }\n\n  initializeItems() {\n    this.filtered_listing = this.listing;\n  }\n\n /****************** SEARCH USERS ********************/\n searchList() {\n  //alert(this.searchQuery);\n  // this.searchSubject.next({\n  //   lower: this.rangeForm.controls.dual.value.lower,\n  //   upper: this.rangeForm.controls.dual.value.upper,\n  //   query: this.searchQuery\n  // });\n  this.initializeItems();\n  return this.listing.items = this.listing.items.filter((thisJob) => {\n    return thisJob.title.toLowerCase().indexOf(this.searchQuery.toLowerCase()) > -1 ||\n    thisJob.job_description.toLowerCase().indexOf(this.searchQuery.toLowerCase()) > -1\n  });\n}\n/****************** SEARCH USERS ********************/\n\nfilterJobs(){\n    this.initializeItems();\n    console.log(\"APPLYING NEW FILTER\");\n    return this.listing.items = this.listing.items.filter((thisJob) => {\n      //return thisJob.job_type_name.indexOf(this.jobFilterArr.job_type) > -1\n      //return thisJob.jobSkills.every(c => this.jobFilterArr.selected_skills.includes(c.id))\n\n      return this.jobFilterArr.job_type.includes(thisJob.job_type) &&\n\n       thisJob.jobSkills.some(c => this.jobFilterArr.selected_skills_arr.includes(c.id))\n      \n      //this.jobFilterArr.job_type > 0 ? thisJob.min_salary >= this.jobFilterArr.min_salary : true\n      //thisJob.max_salary <= this.jobFilterArr.max_salary &&\n      //this.jobFilterArr.min_salary > 0 ? thisJob.min_salary >= this.jobFilterArr.min_salary : true\n    });\n}\n\n  async showJobFilterScreen() {\n    const modal = await this.modalController.create({\n      component: JobFilterPage,\n      cssClass: \"fullscreen-modal\"\n    });\n    //alert(\"hii\");\n    return await modal.present();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { JobService } from '../jobs.service';\nimport { JobListingModel } from '../../dbmodels/jobs-listing.model';\nimport { Observable } from 'rxjs';\nimport { DataStore } from '../../shell/data-store';\nimport { AuthService } from '../../services/auth.service';\n\n@Injectable()\nexport class JobListingResolver implements Resolve<any> {\n   dataSource: Observable<JobListingModel>;\n   dataStore : DataStore<JobListingModel>;\n  constructor(private dealsService: JobService, private authService: AuthService) {}\n\n  resolve() {\n    this.authService.getAuthCache().then(results =>{\n      if(results){\n        let postData = {\n          user_id: results.id\n        }\n        this.dataSource = this.dealsService.getListingDataSource(results.api_key, postData);\n      }\n    });\n     this.dataStore = this.dealsService.getListingStore(this.dataSource);\n    return this.dataStore;\n  }\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ComponentsModule } from '../../components/components.module';\nimport { SelectCurrencyPage } from './select-currency.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ComponentsModule,\n    IonicModule\n  ],\n  declarations: [SelectCurrencyPage],\n  exports: [\n    SelectCurrencyPage\n  ],\n  providers: [],\n  schemas:[CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class SelectCurrencyPageModule {\n\n}\n"],"sourceRoot":"webpack:///","file":"jobs-listing-jobs-listing-module-es5.js"}