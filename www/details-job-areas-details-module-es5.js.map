{"version":3,"sources":["src/app/app-masters/job-areas/details/job-areas-details.page.html","src/app/app-masters/job-areas/details/job-areas-details.module.ts","src/app/app-masters/job-areas/details/job-areas-details.page.ts","src/app/app-masters/job-areas/details/job-areas-details.resolver.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"job-skills/listing\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{user?.title}}</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"openItemUpdateModal()\\\" *ngIf=\\\"localUser?.role_id == 1 && user\\\">\\n        Edit\\n      </ion-button>\\n      <ion-button *ngIf=\\\"user\\\" fill=\\\"clear\\\" color=\\\"light\\\" class=\\\"filters-btn\\\" (click)=\\\"favouriteJobArea()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"heart\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"user-content\\\">\\n  <!------ Top Header Main ---->\\n  <div class=\\\"recipes-wrapper\\\">\\n    <div class=\\\"recipes-list\\\">\\n      <div class=\\\"recipe-item\\\">\\n\\n        <!----- SECTION 1: BASIC ITEM DETAILS ----->\\n        <app-image-shell class=\\\"recipe-cover-image\\\" [mode]=\\\"'cover'\\\" [src]=\\\"'./assets/images/banner.jpg'\\\">\\n          <app-aspect-ratio [ratio]=\\\"{w:12, h:3}\\\">\\n          </app-aspect-ratio>\\n        </app-image-shell>\\n        <div class=\\\"chef-picture-wrapper\\\">\\n          <app-aspect-ratio [ratio]=\\\"{w: 1, h: 1}\\\">\\n            <app-image-shell style=\\\"background-color: white;border-radius: 10px;padding:8px;\\\"  class=\\\"chef-picture-image\\\" [src]=\\\"user?.image\\\" [alt]=\\\"'Job Area Image'\\\"></app-image-shell>\\n          </app-aspect-ratio>\\n        </div>\\n     \\n        <div class=\\\"recipe-call-to-action\\\">\\n         \\n          <h3 class=\\\"recipe-name\\\">\\n            <app-text-shell [data]=\\\"user?.title\\\"></app-text-shell>\\n          </h3>\\n\\n          <h5 class=\\\"user-name\\\" *ngIf=\\\"user?.parent_name\\\">\\n            <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"user?.parent_name\\\"></app-text-shell>\\n          </h5>\\n\\n          <span class=\\\"recipe-chef\\\" *ngIf=\\\"user && user?.jobSkills.length <=0\\\" style=\\\"margin-top:2px;\\\">\\n            <app-text-shell [data]=\\\"'No job skills listed for '+user?.title\\\"></app-text-shell>\\n           </span>\\n\\n           <span class=\\\"recipe-chef\\\" *ngIf=\\\"user && user?.jobSkills.length > 0\\\" style=\\\"margin-top:2px;\\\">\\n            <app-text-shell [data]=\\\"user?.jobSkills.length+' job skills listed for '+user?.title\\\"></app-text-shell>\\n           </span>\\n\\n           <h5 class=\\\"normalText\\\" *ngIf=\\\"user && user?.job_area_desc\\\">\\n            <app-text-shell [data]=\\\"user?.job_area_desc\\\"></app-text-shell>\\n           </h5>\\n\\n        </div>\\n<!----- SECTION 1: BASIC ITEM DETAILS ----->\\n\\n\\n        <!----- SECTION 2: STAT BOX ----->\\n        <hr class=\\\"details-divider\\\">\\n        <ion-row class=\\\"details-scores recipe-attributes\\\">\\n          <ion-col class=\\\"score-item attribute-score\\\">\\n            <ion-icon class=\\\"score-icon\\\" src=\\\"./assets/sample-icons/side-menu/briefcase.svg\\\"></ion-icon>\\n            <div class=\\\"score-value\\\">\\n              <app-text-shell *ngIf=\\\"user\\\" [data]=\\\"user?.numJobs+' Jobs'\\\"></app-text-shell>\\n            </div>\\n          </ion-col>\\n\\n          <ion-col class=\\\"score-item attribute-score\\\">\\n            <ion-icon class=\\\"score-icon\\\" src=\\\"./assets/sample-icons/side-menu/tags.svg\\\"></ion-icon>\\n            <div class=\\\"score-value\\\">\\n              <app-text-shell *ngIf=\\\"user\\\" [data]=\\\"user?.numJobSkills+' Skills'\\\"></app-text-shell>\\n            </div>\\n          </ion-col>\\n\\n          <ion-col class=\\\"score-item attribute-score\\\">\\n            <ion-icon class=\\\"score-icon\\\" src=\\\"./assets/sample-icons/side-menu/heart.svg\\\"></ion-icon>\\n            <div class=\\\"score-value\\\">\\n              <app-text-shell *ngIf=\\\"user\\\" [data]=\\\"user?.numFavourites+' Likes'\\\"></app-text-shell>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <hr class=\\\"details-divider\\\">\\n        <!----- SECTION 2: STAT BOX ----->\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n<!----- SECTION 3: LIST JOB SKILLS ----->\\n  <ion-row class=\\\"details-tags\\\" style=\\\"margin-top:15px;\\\">\\n    <ion-col class=\\\"tag-wrapper\\\" *ngFor=\\\"let tag of user?.jobSkills\\\">\\n      <span class=\\\"item-tag\\\">\\n        <app-text-shell [data]=\\\"tag.title\\\"></app-text-shell>\\n      </span>\\n    </ion-col>\\n  </ion-row>\\n<!----- SECTION 3: LIST JOB SKILLS ----->\\n\\n\\n<!----- SECTION 4: PROMO BOX ----->\\n  <ion-row class=\\\"promo-row\\\" *ngIf=\\\"user\\\">   \\n    <ion-col size=\\\"10\\\">\\n      <p class=\\\"promo-description\\\">\\n        Looking for jobs in {{user?.title}}? Find most relevant jobs in areas of your choice.\\n      </p>\\n    </ion-col>\\n    <ion-col size=\\\"6\\\">\\n      <ion-button class=\\\"promo-code-btn\\\" expand=\\\"block\\\" shape=\\\"round\\\" fill=\\\"outline\\\" color=\\\"claim\\\">\\n        <span class=\\\"promo-code\\\">\\n          <app-text-shell [data]=\\\"'SUBSCRIBE'\\\"></app-text-shell>\\n        </span>\\n      </ion-button>\\n    </ion-col>\\n  </ion-row>\\n<!----- SECTION 4: PROMO BOX ----->\\n\\n</ion-content>\\n\\n<ion-footer style=\\\"background-color:#eeeeee;\\\">\\n  <ion-row class=\\\"details-purchase-options-row\\\">\\n\\n    <ion-col size=\\\"12\\\" *ngIf=\\\"user && user?.id && (localUser?.role_id == 3 || localUser?.role_id == 1)\\\">\\n      <ion-button class=\\\"select-variant-btn\\\" color=\\\"secondary\\\" expand=\\\"block\\\" fill=\\\"solid\\\" [routerLink]=\\\"['/job-requests', {jobArea:user?.id}]\\\">FIND JOBS</ion-button>\\n    </ion-col>\\n    <ion-col size=\\\"12\\\" class=\\\"main-call-to-action-col\\\" *ngIf=\\\"user && user?.id && (localUser?.role_id == 2 || localUser?.role_id == 1)\\\">\\n      <ion-button [routerLink]=\\\"['/post-new-job', {jobArea:user?.id}]\\\" class=\\\"add-to-cart-btn\\\" color=\\\"primary\\\" expand=\\\"block\\\" fill=\\\"solid\\\">HIRE NOW</ion-button>\\n    </ion-col>\\n\\n  </ion-row>\\n\\n</ion-footer>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../../components/components.module';\nimport { JobAreasDetailsResolver } from './job-areas-details.resolver';\nimport { JobAreasDetailsPage } from './job-areas-details.page';\nimport { JobAreasService } from '../job-areas.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: JobAreasDetailsPage,\n    resolve: {\n      data: JobAreasDetailsResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule\n  ],\n  declarations: [JobAreasDetailsPage],\n  providers: [\n    JobAreasService, JobAreasDetailsResolver\n  ]\n})\nexport class JobAreasDetailModule {}\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { JobAreaDetailModel } from '../../../dbmodels/job-areas';\nimport { JobAreasService } from '../job-areas.service';\nimport { UpdateJobAreaModal } from '../update/update-job-area.modal';\nimport { LocalUser } from '../../../dbmodels/local-user';\nimport { AuthService } from '../../../services/auth.service';\nimport { AuthConstants } from '../../../config/AuthConstants';\n\n@Component({\n  selector: 'app-job-areas-details',\n  templateUrl: './job-areas-details.page.html',\n  styleUrls: [\n    '../../../bluspecstyles/details.page.scss',\n    '../../../bluspecstyles/details.shell.scss'\n  ],\n})\nexport class JobAreasDetailsPage implements OnInit {\n  user: JobAreaDetailModel;\n  item_id:any;\n  localUser:LocalUser;\n  \n // relatedUsers: Array<FirebaseListingItemModel> & ShellModel;\n  @HostBinding('class.is-shell') get isShell() {\n    return ((this.user && this.user.isShell)) ? true : false;\n  }\n\n  constructor(\n    public firebaseService: JobAreasService,\n    private authService: AuthService,\n    public modalController: ModalController,\n    public router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n\n  ionViewDidEnter(){\n    //Subscribe to any auth changes event\n    console.log(\"ionViewDidEnter\");\n    //this.firebaseService.getListingDataSource();\n  }\n\n  ngOnInit() {\n    this.authService.getAuthCache().then(promisedValue=>{\n      this.localUser = promisedValue;\n      console.log(\"/***** JUST ASKED LOCAL STORAGE : \"+JSON.stringify(promisedValue));\n    });\n\n    this.firebaseService.invokeItemUpdatedEvent.subscribe(value => {\n      this.user = value;\n            if(AuthConstants.DEV_MODE){\n              console.log(\" @@@@@@@@@@ GREAT UPDATE SYNC \"+JSON.stringify(value));\n              }\n        });\n    \n      this.route.paramMap.subscribe(params => {\n        this.item_id = params.get(\"id\");\n        //alert(this.item_id);\n        if(this.item_id <= 0){\n          this.router.navigate(['page-not-found']);\n        }\n        });\n\n   \n    var postData = {\n      item_id: this.item_id,\n      sort_by: 0\n      };\n\n     this.firebaseService.getDetailsDataSource(postData).subscribe(\n      (res: any) => {\n        console.log(\"Job Skill Profile: \"+JSON.stringify(res)); \n      this.user = res;\n      console.log(\"Job Skill Profile: \"+this.user);\n      if (res.error) {\n        this.router.navigate(['page-not-found']);\n      }\n      },\n      (error: any) => {\n      console.log('Looks like there is a Network Issue.');\n      }\n      );\n      console.log(\"Done fetching Job Skills.\");\n  }\n\n  // ionViewDidEnter(){\n  //   //Subscribe to any auth changes event\n  //   //console.log(\"ionViewDidEnter\");\n  //     this.firebaseService.getListingDataSource();\n  // }\n\n  async openItemUpdateModal() {\n    const modal = await this.modalController.create({\n      component: UpdateJobAreaModal,\n      componentProps: {\n        'user': this.user\n      }\n    });\n    await modal.present();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../../shell/data-store';\nimport { JobAreasService } from '../job-areas.service';\nimport { JobAreaDetailModel } from '../../../dbmodels/job-areas';\n\n\n@Injectable()\nexport class JobAreasDetailsResolver implements Resolve<any> {\n\n  constructor(private firebaseService: JobAreasService) {}\n\n  resolve(route: ActivatedRouteSnapshot) {\n    const userId = route.paramMap.get('item_id');\n\n    const combinedUserDataSource: Observable<JobAreaDetailModel> = this.firebaseService\n    .getDetailsDataSource(userId);\n\n    const combinedUserDataStore: DataStore<JobAreaDetailModel> = this.firebaseService\n    .getDetailsStore(combinedUserDataSource);\n\n    return {user: combinedUserDataStore};\n  }\n}\n"],"sourceRoot":"webpack:///","file":"details-job-areas-details-module-es5.js"}