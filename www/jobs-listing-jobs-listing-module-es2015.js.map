{"version":3,"sources":["./src/app/jobs/listing/jobs-listing.page.html","./src/app/jobs/listing/jobs-listing.module.ts","./src/app/jobs/listing/jobs-listing.page.ts","./src/app/jobs/listing/jobs-listing.resolver.ts","./src/app/utility-components/select-currency/select-currency.module.ts"],"names":[],"mappings":"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","file":"jobs-listing-jobs-listing-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"dashboard\\\"></ion-back-button>\\n    </ion-buttons>\\n    \\n    <ion-title>Job Requests</ion-title>\\n\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button fill=\\\"clear\\\" color=\\\"light\\\" class=\\\"filters-btn\\\" (click)=\\\"loadJobsFromServer()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"refresh\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n\\n  <ion-toolbar class=\\\"filters-toolbar\\\">\\n    <ion-row class=\\\"searchbar-row\\\" align-items-center>\\n      <ion-col>\\n        <ion-searchbar class=\\\"items-searchbar\\\" animated mode=\\\"ios\\\" [(ngModel)]=\\\"searchQuery\\\" (ionChange)=\\\"searchList()\\\" placeholder=\\\"Search jobs...\\\"></ion-searchbar>\\n      </ion-col>\\n      <ion-col class=\\\"call-to-action-col\\\">      \\n        <ion-button fill=\\\"clear\\\" color=\\\"primary\\\" class=\\\"filters-btn\\\" (click)=\\\"showJobFilterScreen()\\\">\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"options\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n    </ion-toolbar>\\n\\n</ion-header>\\n\\n<ion-content class=\\\"deals-listing-content\\\">\\n\\n\\n  <!------- Loading View ------->\\n  <ion-grid style=\\\"height: 100%\\\" *ngIf=\\\"loading\\\">\\n    <ion-row justify-content-center align-items-center style=\\\"height: 100%; flex-direction: column\\\">\\n      <ion-spinner name=\\\"bubbles\\\" style=\\\"width:32px;height:32px;margin:0 auto;stroke:#222;fill:#444;text-align: center;\\\"></ion-spinner>\\n      <h5 style=\\\"text-align: center;columns: #555555;\\\">Finding Jobs...</h5>\\n      </ion-row>\\n    </ion-grid>\\n   <!------- Loading View ------->\\n  \\n     <!------- Empty View ------->\\n     <ion-grid style=\\\"height: 100%\\\" *ngIf=\\\"listing.items?.length <= 0 && !loading\\\">\\n      <ion-row justify-content-center align-items-center style=\\\"height: 100%; flex-direction: column\\\">\\n        <ion-icon src=\\\"./assets/sample-icons/side-menu/briefcase.svg\\\" style=\\\"display:block;width:48px;height:48px;color:#444\\\"></ion-icon>\\n        <h5 style=\\\"text-align: center;columns: #555555;\\\">No Job Found</h5>\\n        <ion-button class=\\\"promo-code-btn\\\" expand=\\\"block\\\" shape=\\\"round\\\" fill=\\\"outline\\\" color=\\\"claim\\\" (click)=\\\"showJobFilterScreen()\\\">\\n          <span class=\\\"promo-code\\\">\\n           FILTER JOBS\\n          </span>\\n        </ion-button>\\n        </ion-row>\\n      </ion-grid>\\n     <!------- Empty View ------->\\n\\n  <ng-container *ngIf=\\\"listing?.items && !loading\\\">\\n    <ion-toolbar color=\\\"secondary\\\" class=\\\"ion-padding\\\" *ngIf=\\\"appSettings && appSettings.debugMode\\\">\\n      <p>Debug Mode ON: {{jobFilterArr|json}}</p>\\n   </ion-toolbar>\\n    <!-- <p>Filters: {{jobFilterArr|json}}</p> -->\\n    <!-- <p>{{listing.items.length}} Professionals found within {{jobFilterArr.search_radius}} K.m</p> -->\\n   \\n    <div class=\\\"listing-item\\\" *ngFor=\\\"let item of listing.items\\\" [ngClass]=\\\"{'ended': ((item.expirationDate | appTimeDifference) < 0), 'imminent-end': ((item.expirationDate | appTimeDifference) > 0 && (item.expirationDate | appTimeDifference) <= 2), 'ends-soon': ((item.expirationDate | appTimeDifference) > 0 && (item.expirationDate | appTimeDifference) > 2 && (item.expirationDate | appTimeDifference) < 10), 'distant-end': ((item.expirationDate | appTimeDifference) >= 10)}\\\">\\n      \\n      <ion-row class=\\\"top-row\\\">\\n        <ion-col class=\\\"info-col\\\">\\n          <h4 class=\\\"item-name\\\">\\n            <a class=\\\"name-anchor\\\" [routerLink]=\\\"['/jobs/details', item.qcode]\\\">\\n              <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"item.title\\\"></app-text-shell>\\n            </a>\\n          </h4>\\n\\n          <ion-badge *ngIf=\\\"item && item.job_type_name\\\" style=\\\"margin-left: 0px;\\\" class=\\\"status-label\\\" color=\\\"facebook\\\">{{item.job_type_name}}</ion-badge>\\n          &nbsp; <ion-badge *ngIf=\\\"item && item.job_area_name\\\" style=\\\"margin-left: 0px;\\\" class=\\\"status-label\\\" color=\\\"facebook\\\">{{item.job_area_name}} </ion-badge>\\n\\n        </ion-col> \\n        <ion-col class=\\\"user-actions-wrapper\\\">\\n          <!-- <ion-button class=\\\"bookmark-button\\\" fill=\\\"clear\\\" color=\\\"claim\\\">\\n            <span class=\\\"accommodation-value\\\" *ngIf=\\\"item.salary_type == 'monthly'\\\">\\n              <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"item.currency+' '+item.jobSalary.min_salary+' - '+item.jobSalary.max_salary\\\"></app-text-shell>\\n            </span>\\n            <span class=\\\"accommodation-value\\\" *ngIf=\\\"item.salary_type == 'hourly'\\\">\\n              <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"item.currency+' '+item.jobSalary.min_rate_per_hour+' - '+item.jobSalary.max_rate_per_hour\\\"></app-text-shell>\\n            </span>\\n            <span class=\\\"accommodation-value\\\" *ngIf=\\\"item.salary_type == 'fixed'\\\">\\n              <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"item.currency+' '+item.jobSalary.fixed_fee\\\"></app-text-shell>\\n            </span>\\n          </ion-button> -->\\n\\n          <h4 class=\\\"bookmark-button\\\" fill=\\\"clear\\\" color=\\\"claim\\\">\\n            <span class=\\\"accommodation-value\\\" *ngIf=\\\"item.job_salary && item.salary_type == 'monthly'\\\">\\n              <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"item.currency+' '+item.job_salary\\\"></app-text-shell>\\n            </span>\\n            <span class=\\\"accommodation-value\\\" *ngIf=\\\"item.job_salary && item.salary_type == 'hourly'\\\">\\n              <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"item.currency+' '+item.job_salary\\\"></app-text-shell>\\n            </span>\\n            <span class=\\\"accommodation-value\\\" *ngIf=\\\"item.job_salary && item.salary_type == 'fixed'\\\">\\n              <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"item.currency+' '+item.job_salary\\\"></app-text-shell>\\n            </span>\\n            <span class=\\\"accommodation-value\\\" *ngIf=\\\"!item.job_salary && item.salary_type == ''\\\">\\n              <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"'N/A'\\\"></app-text-shell>\\n            </span>\\n          </h4>\\n\\n          <h5 class=\\\"user-job\\\" style=\\\"font-size: 12px;line-height: 12px;margin-top: 0px;\\\" *ngIf=\\\"item && item.salary_type\\\">\\n            <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"item.salary_type|titlecase\\\"></app-text-shell>\\n          </h5>\\n\\n        </ion-col>\\n      </ion-row>\\n\\n\\n      <ion-row class=\\\"middle-row\\\">\\n        <ion-col class=\\\"info-col\\\">\\n             <!-- <ion-badge style=\\\"margin-left: 0px;\\\" class=\\\"status-label\\\" color=\\\"facebook\\\"><ion-icon name=\\\"briefcase\\\"></ion-icon> {{item.job_type_name}} </ion-badge>\\n            &nbsp;<ion-badge style=\\\"margin-left: 0px;\\\" class=\\\"status-label\\\" color=\\\"facebook\\\"><ion-icon name=\\\"construct\\\"></ion-icon> {{item.job_area_name}} </ion-badge>\\n            -->\\n\\n          <p class=\\\"item-description\\\" *ngIf=\\\"item.address\\\"><ion-icon name=\\\"locate\\\" style=\\\"display:inline-block;font-size:13px;line-height:14px;vertical-align: middle;\\\"></ion-icon> <app-text-shell style=\\\"display:inline-block;vertical-align: middle;\\\" animation=\\\"bouncing\\\" [data]=\\\"item.address\\\">\\n          </app-text-shell></p>\\n          \\n          <p class=\\\"item-description\\\" *ngIf=\\\"item.distance && appSettings && appSettings.debugMode\\\"><ion-icon name=\\\"navigate\\\" style=\\\"display:inline-block;font-size:13px;line-height:14px;vertical-align: middle;\\\"></ion-icon> <app-text-shell style=\\\"display:inline-block;vertical-align: middle;\\\" animation=\\\"bouncing\\\" [data]=\\\"item.distance+' Km away'\\\">\\n          </app-text-shell></p>\\n\\n          <p class=\\\"item-description\\\" style=\\\"margin-top:10px;\\\">\\n            <app-text-shell animation=\\\"bouncing\\\" lines=\\\"3\\\" [data]=\\\"item.job_description\\\"></app-text-shell>\\n          </p>\\n        \\n\\n          <ion-row class=\\\"item-tags\\\" *ngIf=\\\"item.jobSkills.length > 0\\\">\\n            <ion-col class=\\\"tag-wrapper\\\">\\n              <span class=\\\"item-tag\\\" style=\\\"display: inline-block;vertical-align: middle;border:none;font-size: 13px;\\n              font-weight: 500;\\\">Required Skills: </span></ion-col>\\n            <ion-col class=\\\"tag-wrapper\\\" *ngFor=\\\"let skill of item.jobSkills\\\">\\n              <span class=\\\"item-tag\\\" style=\\\"display: inline-block;\\\">\\n                <app-text-shell animation=\\\"bouncing\\\" style=\\\"display: inline-block;vertical-align: middle;\\\" [data]=\\\"skill.title\\\"></app-text-shell>\\n              </span>\\n            </ion-col>\\n          </ion-row>\\n\\n        </ion-col>\\n        \\n      </ion-row>\\n      <ion-row class=\\\"bottom-row\\\">\\n        <!-- <ion-col class=\\\"code-wrapper\\\">\\n          <span class=\\\"item-code\\\" [ngClass]=\\\"{'expired': ((item.expirationDate | appTimeDifference) < 0)}\\\">\\n            <app-text-shell [data]=\\\"item.job_type_name\\\"></app-text-shell>\\n          </span>\\n    \\n        </ion-col> -->\\n\\n        <ion-col *ngIf=\\\"((item.expirationDate | appTimeDifference) > 0)\\\" class=\\\"call-to-action-col\\\">\\n          <ion-button class=\\\"claim-button\\\" expand=\\\"block\\\" color=\\\"claim\\\" [routerLink]=\\\"['/jobs/details', item.qcode]\\\">\\n            <span class=\\\"button-cta\\\">ACCEPT</span>\\n            <ion-icon slot=\\\"end\\\" name=\\\"ios-arrow-forward\\\"></ion-icon>\\n          </ion-button>\\n        </ion-col>\\n        <ion-col *ngIf=\\\"((item.expirationDate | appTimeDifference) <= 0)\\\" class=\\\"call-to-action-col\\\">\\n          <span class=\\\"expired-cta\\\">EXPIRED</span>\\n        </ion-col>\\n        \\n        <ion-col class=\\\"time-left-wrapper\\\" size=\\\"5\\\" [ngClass]=\\\"{'countdown-active': ((item.expirationDate | appTimeDifference) > 0 && (item.expirationDate | appTimeDifference) <= 2)}\\\">\\n          <span class=\\\"expiration-cta\\\">JOB {{ ((item.expirationDate | appTimeDifference) < 0) ? 'EXPIRED' : 'EXPIRES IN' }}:</span>\\n          <ng-container *ngIf=\\\"((item.expirationDate | appTimeDifference) < 0 || (item.expirationDate | appTimeDifference) > 2)\\\">\\n            <span class=\\\"item-time-left\\\">\\n              <app-text-shell [data]=\\\"(item.expirationDate | appTimeAgo)\\\"></app-text-shell>\\n            </span>\\n          </ng-container>\\n          <ng-container *ngIf=\\\"((item.expirationDate | appTimeDifference) > 0 && (item.expirationDate | appTimeDifference) <= 2)\\\">\\n            <ion-row class=\\\"countdown-wrapper\\\">\\n              <app-countdown-timer class=\\\"item-countdown\\\" fill=\\\"inner-time\\\" [end]=\\\"item.expirationDate\\\" [units]=\\\"{from: 'hour', to: 'second'}\\\"></app-countdown-timer>\\n            </ion-row>\\n          </ng-container>\\n        </ion-col>\\n      </ion-row>\\n    </div>\\n  </ng-container>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\nimport { JobListingPage } from './jobs-listing.page';\nimport { JobListingResolver } from './jobs-listing.resolver';\nimport { JobService } from '../jobs.service';\nimport { JobFilterPage } from './job-filter/job-filter.page';\nimport { SelectJobSkillPage } from '../../utility-components/select-job-skill/select-job-skill.page';\nimport { SelectJobAreaPage } from '../../utility-components/select-job-area/select-job-area.page';\nimport { UtilityComponentsModule } from '../../utility-components/utility-components.module';\nimport { SelectJobSkillPageModule } from '../../utility-components/select-job-skill/select-job-skill.module';\nimport { SelectCurrencyPageModule } from '../../utility-components/select-currency/select-currency.module';\nimport { SelectCurrencyPage } from '../../utility-components/select-currency/select-currency.page';\nimport { LocationAutocompletePage } from '../../bluspec-recruiter/location-autocomplete/location-autocomplete.page';\nimport { LocationAutocompletePageModule } from '../../bluspec-recruiter/location-autocomplete/location-autocomplete.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: JobListingPage,\n    resolve: {\n      data: JobListingResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    UtilityComponentsModule,\n    LocationAutocompletePageModule,\n    SelectJobSkillPageModule,\n    SelectCurrencyPageModule,\n    PipesModule,\n    HttpClientModule\n  ],\n  declarations: [\n    JobListingPage, JobFilterPage\n  ],\n  providers: [\n    JobListingResolver,\n    JobService\n  ],\n  entryComponents: [JobFilterPage, LocationAutocompletePage, SelectJobAreaPage, SelectJobSkillPage, SelectCurrencyPage]\n})\nexport class JobListingPageModule {}\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n\nimport { JobFilterPage } from './job-filter/job-filter.page';\nimport { ModalController } from '@ionic/angular';\nimport { JobService } from '../jobs.service';\nimport { JobListingModel } from '../../dbmodels/jobs-listing.model';\nimport { LocalUser } from '../../dbmodels/local-user';\nimport { AuthService } from '../../services/auth.service';\nimport { ToastService } from '../../services/toast.service';\nimport { AuthConstants } from '../../config/AuthConstants';\nimport { JobFilterCache } from '../../dbmodels/job-filter-cache';\nimport { StorageService } from '../../services/storage.service';\nimport { SettingsModel } from '../../dbmodels/settings-model';\n\n@Component({\n  selector: 'app-deals-listing',\n  templateUrl: './jobs-listing.page.html',\n  styleUrls: [\n    './styles/deals-listing.page.scss',\n    './styles/deals-listing.shell.scss',\n    './styles/deals-listing.ios.scss'\n  ],\n})\nexport class JobListingPage implements OnInit {\n  listing: JobListingModel;\n  filtered_listing: JobListingModel;\n  searchQuery: string;\n  jobFilterArr: JobFilterCache;\n  localUser: LocalUser;\n  loading = false;\n  appSettings: SettingsModel;\n  //Selected params\n  skillID : number = 0;\n  jobArea : number = 0;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.listing && this.listing.isShell) ? true : false;\n  }\n\n  fetchFiltersFromService(){\n    this.jobFilterArr = this.jobService.getFilterData();\n    if(AuthConstants.DEV_MODE){\n      console.log(\"fetchFiltersFromService() => \"+JSON.stringify(this.jobFilterArr));\n    }\n  }\n\n  constructor(private jobService: JobService, private route: ActivatedRoute, \n    private authService: AuthService,\n    private storageService: StorageService,\n    private toastService: ToastService,\n    private modalController: ModalController) { }\n\n  ngOnInit(): void {\n    //Just get fresh every time via Constructor unless required\n    this.jobFilterArr = this.jobService.getFilterData(); \n     this.jobService.invokeFilterChangeEvent.subscribe(newFilter =>{\n       if(newFilter){\n       this.jobFilterArr = newFilter;\n       //Enable Server Filter\n       this.loadJobsFromServer(true);\n       //Enable Local Filter\n       //this.filterJobs();\n       console.log(\"NEW FILTER: \"+JSON.stringify(newFilter));\n       }\n     });\n\n    this.route.params.subscribe(params => {\n      if(params.get(\"skillID\")){\n        this.skillID = params['skillID'];\n        console.log(\"GOT SKILL via Route: \"+this.skillID);\n      }\n      if(params.get(\"jobArea\")){\n        this.jobArea = params['jobArea'];\n      }\n      \n      });\n\n    this.route.data.subscribe((resolvedRouteData) => {\n      const listingDataStore = resolvedRouteData['data'];\n      if(AuthConstants.DEV_MODE){\n      console.log(\"ROUTE BASED JOB DETAILS HERE \"+ JSON.stringify(listingDataStore));\n      }\n      listingDataStore.state.subscribe(\n        (state) => {\n          this.listing = state;\n          console.log(\"JOB DETAILS HERE \"+ JSON.stringify(this.listing));\n        },\n        (error) => {}\n      );\n    },\n    (error) => {})\n\n    this.storageService.get(AuthConstants.APP_SETTINGS).then(appSettings=>{\n      if(appSettings){\n        this.appSettings = appSettings;\n        if(AuthConstants.DEV_MODE){\n          console.log(\"AppSettings: \"+JSON.stringify(appSettings));\n        }\n      }\n    });\n\n    this.loadJobsFromServer();\n  }\n\n  loadJobsFromServer(withFilter = false){\n    this.loading = true;\n    this.authService.getAuthCache().then(results =>{\n      if(results){\n        let postData = {\n          skillID: \"\"+this.skillID,\n          jobArea: this.jobArea\n        }\n        if(withFilter){\n          postData = this.jobFilterArr;\n        }\n        console.log(\"FETCH JOBS FROM SERVICE WITH FILTER => \"+ JSON.stringify(this.jobFilterArr));\n        this.jobService.getListingDataSource(results.api_key, postData).subscribe(resultData=>{\n          if(resultData){\n             if(AuthConstants.DEV_MODE){\n              console.log(\"JOBS FETCHED FROM SERVICE: \"+ JSON.stringify(resultData));\n             }\n             this.listing = resultData;\n             this.loading = false;\n          }\n        });\n      }\n    });\n\n  }\n\n  initializeItems() {\n    this.filtered_listing = this.listing;\n  }\n\n /****************** SEARCH USERS ********************/\n searchList() {\n  //alert(this.searchQuery);\n  // this.searchSubject.next({\n  //   lower: this.rangeForm.controls.dual.value.lower,\n  //   upper: this.rangeForm.controls.dual.value.upper,\n  //   query: this.searchQuery\n  // });\n  this.initializeItems();\n  return this.listing.items = this.listing.items.filter((thisJob) => {\n    return thisJob.title.toLowerCase().indexOf(this.searchQuery.toLowerCase()) > -1 ||\n    thisJob.job_description.toLowerCase().indexOf(this.searchQuery.toLowerCase()) > -1\n  });\n}\n/****************** SEARCH USERS ********************/\n\nfilterJobs(){\n    this.initializeItems();\n    console.log(\"APPLYING NEW FILTER\");\n    return this.listing.items = this.listing.items.filter((thisJob) => {\n      //return thisJob.job_type_name.indexOf(this.jobFilterArr.job_type) > -1\n      //return thisJob.jobSkills.every(c => this.jobFilterArr.selected_skills.includes(c.id))\n\n      return this.jobFilterArr.job_type.includes(thisJob.job_type) &&\n\n       thisJob.jobSkills.some(c => this.jobFilterArr.selected_skills_arr.includes(c.id))\n      \n      //this.jobFilterArr.job_type > 0 ? thisJob.min_salary >= this.jobFilterArr.min_salary : true\n      //thisJob.max_salary <= this.jobFilterArr.max_salary &&\n      //this.jobFilterArr.min_salary > 0 ? thisJob.min_salary >= this.jobFilterArr.min_salary : true\n    });\n}\n\n  async showJobFilterScreen() {\n    const modal = await this.modalController.create({\n      component: JobFilterPage,\n      cssClass: \"fullscreen-modal\"\n    });\n    //alert(\"hii\");\n    return await modal.present();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { JobService } from '../jobs.service';\nimport { JobListingModel } from '../../dbmodels/jobs-listing.model';\nimport { Observable } from 'rxjs';\nimport { DataStore } from '../../shell/data-store';\nimport { AuthService } from '../../services/auth.service';\n\n@Injectable()\nexport class JobListingResolver implements Resolve<any> {\n   dataSource: Observable<JobListingModel>;\n   dataStore : DataStore<JobListingModel>;\n  constructor(private dealsService: JobService, private authService: AuthService) {}\n\n  resolve() {\n    this.authService.getAuthCache().then(results =>{\n      if(results){\n        let postData = {\n          user_id: results.id\n        }\n        this.dataSource = this.dealsService.getListingDataSource(results.api_key, postData);\n      }\n    });\n     this.dataStore = this.dealsService.getListingStore(this.dataSource);\n    return this.dataStore;\n  }\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ComponentsModule } from '../../components/components.module';\nimport { SelectCurrencyPage } from './select-currency.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ComponentsModule,\n    IonicModule\n  ],\n  declarations: [SelectCurrencyPage],\n  exports: [\n    SelectCurrencyPage\n  ],\n  providers: [],\n  schemas:[CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class SelectCurrencyPageModule {\n\n}\n"],"sourceRoot":"webpack:///"}