{"version":3,"sources":["src/app/dbmodels/user-jobs-model.ts","src/app/jobs/details/job-details.model.ts","src/app/jobs/jobs.service.ts","src/app/jobs/listing/jobs-listing.model.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAEa,Y;;;;;AAqNX,8BAAA;AAAA;;AAAA;;AACE;AArNF,cAAA,YAAA,GASwB,CACtB;AACI,UAAA,KAAK,EAAE,EADX;AAEI,UAAA,eAAe,EAAE,EAFrB;AAGI,UAAA,QAAQ,EAAE,EAHd;AAII,UAAA,QAAQ,EAAE,EAJd;AAKI,UAAA,MAAM,EAAE,EALZ;AAMI,UAAA,WAAW,EAAE,EANjB;AAOI,UAAA,MAAM,EAAE,EAPZ;AAQI,UAAA,cAAc,EAAE,EARpB;AASI,UAAA,SAAS,EAAE;AATf,SADsB,EAYtB;AACI,UAAA,KAAK,EAAE,EADX;AAEI,UAAA,eAAe,EAAE,EAFrB;AAGI,UAAA,QAAQ,EAAE,EAHd;AAII,UAAA,QAAQ,EAAE,EAJd;AAKI,UAAA,MAAM,EAAE,EALZ;AAMI,UAAA,WAAW,EAAE,EANjB;AAOI,UAAA,MAAM,EAAE,EAPZ;AAQI,UAAA,cAAc,EAAE,EARpB;AASI,UAAA,SAAS,EAAE;AATf,SAZsB,EAuBtB;AACI,UAAA,KAAK,EAAE,EADX;AAEI,UAAA,eAAe,EAAE,EAFrB;AAGI,UAAA,QAAQ,EAAE,EAHd;AAII,UAAA,QAAQ,EAAE,EAJd;AAKI,UAAA,MAAM,EAAE,EALZ;AAMI,UAAA,WAAW,EAAE,EANjB;AAOI,UAAA,MAAM,EAAE,EAPZ;AAQI,UAAA,cAAc,EAAE,EARpB;AASI,UAAA,SAAS,EAAE;AATf,SAvBsB,EAkCtB;AACI,UAAA,KAAK,EAAE,EADX;AAEI,UAAA,eAAe,EAAE,EAFrB;AAGI,UAAA,QAAQ,EAAE,EAHd;AAII,UAAA,QAAQ,EAAE,EAJd;AAKI,UAAA,MAAM,EAAE,EALZ;AAMI,UAAA,WAAW,EAAE,EANjB;AAOI,UAAA,MAAM,EAAE,EAPZ;AAQI,UAAA,cAAc,EAAE,EARpB;AASI,UAAA,SAAS,EAAE;AATf,SAlCsB,CATxB;AAuDA,cAAA,YAAA,GAagC,CAC9B;AACI,UAAA,KAAK,EAAE,EADX;AAEI,UAAA,eAAe,EAAE,EAFrB;AAGI,UAAA,QAAQ,EAAE,EAHd;AAII,UAAA,QAAQ,EAAE,EAJd;AAKI,UAAA,MAAM,EAAE,EALZ;AAMI,UAAA,WAAW,EAAE,EANjB;AAOI,UAAA,MAAM,EAAE,EAPZ;AAQI,UAAA,QAAQ,EAAE,EARd;AASI,UAAA,cAAc,EAAE,EATpB;AAUI,UAAA,aAAa,EAAE,EAVnB;AAWI,UAAA,YAAY,EAAE,EAXlB;AAYI,UAAA,aAAa,EAAE,EAZnB;AAaI,UAAA,iBAAiB,EAAE;AAbvB,SAD8B,EAgB9B;AACI,UAAA,KAAK,EAAE,EADX;AAEI,UAAA,eAAe,EAAE,EAFrB;AAGI,UAAA,QAAQ,EAAE,EAHd;AAII,UAAA,QAAQ,EAAE,EAJd;AAKI,UAAA,MAAM,EAAE,EALZ;AAMI,UAAA,WAAW,EAAE,EANjB;AAOI,UAAA,MAAM,EAAE,EAPZ;AAQI,UAAA,QAAQ,EAAE,EARd;AASI,UAAA,cAAc,EAAE,EATpB;AAUI,UAAA,aAAa,EAAE,EAVnB;AAWI,UAAA,YAAY,EAAE,EAXlB;AAYI,UAAA,aAAa,EAAE,EAZnB;AAaI,UAAA,iBAAiB,EAAE;AAbvB,SAhB8B,EA+B9B;AACI,UAAA,KAAK,EAAE,EADX;AAEI,UAAA,eAAe,EAAE,EAFrB;AAGI,UAAA,QAAQ,EAAE,EAHd;AAII,UAAA,QAAQ,EAAE,EAJd;AAKI,UAAA,MAAM,EAAE,EALZ;AAMI,UAAA,WAAW,EAAE,EANjB;AAOI,UAAA,MAAM,EAAE,EAPZ;AAQI,UAAA,QAAQ,EAAE,EARd;AASI,UAAA,cAAc,EAAE,EATpB;AAUI,UAAA,aAAa,EAAE,EAVnB;AAWI,UAAA,YAAY,EAAE,EAXlB;AAYI,UAAA,aAAa,EAAE,EAZnB;AAaI,UAAA,iBAAiB,EAAE;AAbvB,SA/B8B,EA8C9B;AACI,UAAA,KAAK,EAAE,EADX;AAEI,UAAA,eAAe,EAAE,EAFrB;AAGI,UAAA,QAAQ,EAAE,EAHd;AAII,UAAA,QAAQ,EAAE,EAJd;AAKI,UAAA,MAAM,EAAE,EALZ;AAMI,UAAA,WAAW,EAAE,EANjB;AAOI,UAAA,MAAM,EAAE,EAPZ;AAQI,UAAA,QAAQ,EAAE,EARd;AASI,UAAA,cAAc,EAAE,EATpB;AAUI,UAAA,aAAa,EAAE,EAVnB;AAWI,UAAA,YAAY,EAAE,EAXlB;AAYI,UAAA,aAAa,EAAE,EAZnB;AAaI,UAAA,iBAAiB,EAAE;AAbvB,SA9C8B,CAbhC;AA4EA,cAAA,cAAA,GAcmB,CACjB;AACI,UAAA,KAAK,EAAE,EADX;AAEI,UAAA,eAAe,EAAE,EAFrB;AAGI,UAAA,QAAQ,EAAE,EAHd;AAII,UAAA,QAAQ,EAAE,EAJd;AAKI,UAAA,MAAM,EAAE,EALZ;AAMI,UAAA,WAAW,EAAE,EANjB;AAOI,UAAA,MAAM,EAAE,EAPZ;AAQI,UAAA,cAAc,EAAE,EARpB;AASI,UAAA,aAAa,EAAE,EATnB;AAUI,UAAA,cAAc,EAAE,EAVpB;AAWI,UAAA,YAAY,EAAE,EAXlB;AAYI,UAAA,aAAa,EAAE,EAZnB;AAaI,UAAA,QAAQ,EAAE,KAbd;AAcI,UAAA,MAAM,EAAE;AAdZ,SADiB,EAiBjB;AACI,UAAA,KAAK,EAAE,EADX;AAEI,UAAA,eAAe,EAAE,EAFrB;AAGI,UAAA,QAAQ,EAAE,EAHd;AAII,UAAA,QAAQ,EAAE,EAJd;AAKI,UAAA,MAAM,EAAE,EALZ;AAMI,UAAA,WAAW,EAAE,EANjB;AAOI,UAAA,MAAM,EAAE,EAPZ;AAQI,UAAA,cAAc,EAAE,EARpB;AASI,UAAA,aAAa,EAAE,EATnB;AAUI,UAAA,cAAc,EAAE,EAVpB;AAWI,UAAA,YAAY,EAAE,EAXlB;AAYI,UAAA,aAAa,EAAE,EAZnB;AAaI,UAAA,QAAQ,EAAE,KAbd;AAcI,UAAA,MAAM,EAAE;AAdZ,SAjBiB,EAiCjB;AACI,UAAA,KAAK,EAAE,EADX;AAEI,UAAA,eAAe,EAAE,EAFrB;AAGI,UAAA,QAAQ,EAAE,EAHd;AAII,UAAA,QAAQ,EAAE,EAJd;AAKI,UAAA,MAAM,EAAE,EALZ;AAMI,UAAA,WAAW,EAAE,EANjB;AAOI,UAAA,MAAM,EAAE,EAPZ;AAQI,UAAA,cAAc,EAAE,EARpB;AASI,UAAA,aAAa,EAAE,EATnB;AAUI,UAAA,cAAc,EAAE,EAVpB;AAWI,UAAA,YAAY,EAAE,EAXlB;AAYI,UAAA,aAAa,EAAE,EAZnB;AAaI,UAAA,QAAQ,EAAE,KAbd;AAcI,UAAA,MAAM,EAAE;AAdZ,SAjCiB,EAiDjB;AACI,UAAA,KAAK,EAAE,EADX;AAEI,UAAA,eAAe,EAAE,EAFrB;AAGI,UAAA,QAAQ,EAAE,EAHd;AAII,UAAA,QAAQ,EAAE,EAJd;AAKI,UAAA,MAAM,EAAE,EALZ;AAMI,UAAA,WAAW,EAAE,EANjB;AAOI,UAAA,MAAM,EAAE,EAPZ;AAQI,UAAA,cAAc,EAAE,EARpB;AASI,UAAA,aAAa,EAAE,EATnB;AAUI,UAAA,cAAc,EAAE,EAVpB;AAWI,UAAA,YAAY,EAAE,EAXlB;AAYI,UAAA,aAAa,EAAE,EAZnB;AAaI,UAAA,QAAQ,EAAE,KAbd;AAcI,UAAA,MAAM,EAAE;AAdZ,SAjDiB,CAdnB;AAiFA;AAEC;;;MAvN+B,8CAAA,CAAA,YAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCErB,e;;;;;AAgFX,iCAAA;AAAA;;AAAA;;AACE;AAhFF,eAAA,cAAA,GAAgC,CAC9B,EAD8B,EAE9B,EAF8B,EAG9B,EAH8B,CAAhC;AA0BA,eAAA,MAAA,GAA4C,CAC1C;AACE,UAAA,EAAE,EAAE,EADN;AAEE,UAAA,KAAK,EAAE;AAFT,SAD0C,EAK1C;AACE,UAAA,EAAE,EAAE,EADN;AAEE,UAAA,KAAK,EAAE;AAFT,SAL0C,EAS1C;AACE,UAAA,EAAE,EAAE,EADN;AAEE,UAAA,KAAK,EAAE;AAFT,SAT0C,CAA5C;AAeA,eAAA,WAAA,GAAsE,CACpE;AACE,UAAA,EAAE,EAAE,EADN;AAEE,UAAA,KAAK,EAAE,EAFT;AAGE,UAAA,WAAW,EAAE;AAHf,SADoE,EAMpE;AACE,UAAA,EAAE,EAAE,EADN;AAEE,UAAA,KAAK,EAAE,EAFT;AAGE,UAAA,WAAW,EAAE;AAHf,SANoE,EAWpE;AACE,UAAA,EAAE,EAAE,EADN;AAEE,UAAA,KAAK,EAAE,EAFT;AAGE,UAAA,WAAW,EAAE;AAHf,SAXoE,CAAtE,CAsCA,CArBA;AACA;;AACA,eAAA,cAAA,GAAyB,kCAAK,GAAG,GAAR,CAAY,CAAZ,EAAe,KAAf,EAAsB,MAAtB,CAA6B,qBAA7B,CAAzB;AACA,eAAA,YAAA,GAAyE,CACvE;AACE,UAAA,IAAI,EAAE,EADR;AAEE,UAAA,IAAI,EAAE,EAFR;AAGE,UAAA,WAAW,EAAE;AAHf,SADuE,EAMvE;AACE,UAAA,IAAI,EAAE,EADR;AAEE,UAAA,IAAI,EAAE,EAFR;AAGE,UAAA,WAAW,EAAE;AAHf,SANuE,EAWvE;AACE,UAAA,IAAI,EAAE,EADR;AAEE,UAAA,IAAI,EAAE,EAFR;AAGE,UAAA,WAAW,EAAE;AAHf,SAXuE,CAAzE;AAkBA;AAEC;;;MAlFkC,8CAAA,CAAA,YAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWrC,QAAa,UAAb;AAAA;AAAA;AAOE,0BAAoB,IAApB,EAAoC;AAAA;;AAAhB,aAAA,IAAA,GAAA,IAAA;AAFpB,aAAA,WAAA,GAA4B,IAAI,iCAAA,CAAA,SAAA,CAAJ,EAA5B;AAEyC;;AAP3C;AAAA;AAAA,wCASe;AACX,iBAAO,KAAK,aAAZ;AACF;AAXF;AAAA;AAAA,sCAae,IAbf,EAauB;AAClB,eAAK,aAAL,GAAqB,IAArB;AACA,eAAK,WAAL,CAAiB,IAAjB,CAAsB,IAAtB;AACH;AAhBF;AAAA;AA6BE;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3CF,yCA8CmB,MA9CnB,EA8C+B,QA9C/B,EA8C4C;AACxC,cAAM,WAAW,GAAG;AACpB,YAAA,OAAO,EAAE,IAAI,iDAAA,CAAA,aAAA,CAAJ,CAAgB;AACvB,8BAAiB,kBADM;AAEvB,+BAAiB;AAFM,aAAhB;AADW,WAApB;AAMA,cAAM,GAAG,GAAG,uDAAA,CAAA,aAAA,CAAA,CAAY,MAAZ,GAAqB,qBAAjC;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,YAAU,GAAV,GAAc,WAAd,GAA0B,IAAI,CAAC,SAAL,CAAe,QAAf,CAA1B,GAAmD,aAAnD,GAAiE,MAA7E;AACA,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,GAAf,EAAoB,QAApB,EAA8B,WAA9B,CAAP;AACD;AAxDH;AAAA;AAAA,6CA0D8B,MA1D9B,EA0D0C,QA1D1C,EA0DsD;AAClD,cAAM,WAAW,GAAG;AAClB,YAAA,OAAO,EAAE,IAAI,iDAAA,CAAA,aAAA,CAAJ,CAAgB;AACvB,8BAAiB,kBADM;AAEvB,+BAAiB;AAFM,aAAhB;AADS,WAApB;AAME,cAAM,GAAG,GAAG,uDAAA,CAAA,aAAA,CAAA,CAAY,MAAZ,GAAqB,mBAAjC;AACA,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAgC,GAAhC,EAAqC,QAArC,EAA+C,WAA/C,CAAP;AACH;AAnEH;AAAA;AAAA,wCAqEyB,UArEzB,EAqEgE;AAC5D,cAAI,CAAC,KAAK,gBAAV,EAA4B;AAC1B;AACA,gBAAM,UAAU,GAAoB,IAAI,wDAAA,CAAA,iBAAA,CAAJ,EAApC;AACA,iBAAK,gBAAL,GAAwB,IAAI,8CAAA,CAAA,WAAA,CAAJ,CAAc,UAAd,CAAxB,CAH0B,CAI1B;;AACA,iBAAK,gBAAL,CAAsB,IAAtB,CAA2B,UAA3B;AACD;;AACD,iBAAO,KAAK,gBAAZ;AACD;AA9EH;AAAA;AAAA,+CAgF6B;AACzB,iBAAO,KAAK,IAAL,CAAU,GAAV,CAA+B,yCAA/B,EAA0E,IAA1E,CACL,MAAA,CAAA,2CAAA,CAAA,KAAA,CAAA,CAAA,CAAI,UAAA,WAAW,EAAG;AAChB,gBAAM,cAAc,GAAG,kCAAK,GAAG,GAAR,CAAY,CAAZ,EAAe,KAAf,EAAsB,GAAtB,CAA0B,CAA1B,EAA6B,MAA7B,EAAqC,GAArC,CAAyC,EAAzC,EAA6C,QAA7C,EAAuD,MAAvD,CAA8D,qBAA9D,CAAvB;AACA,mBAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAW,WAAX,EAAsB;AAAE,cAAA,cAAc,EAAd;AAAF,aAAtB,CAAA;AACD,WAHD,CADK,CAAP;AAMD;AAvFH;AAAA;AAAA,wCAyFyB,UAzFzB,EAyFgE;AAC5D;AACA,cAAM,UAAU,GAAoB,IAAI,uDAAA,CAAA,iBAAA,CAAJ,EAApC;AACA,eAAK,gBAAL,GAAwB,IAAI,8CAAA,CAAA,WAAA,CAAJ,CAAc,UAAd,CAAxB,CAH4D,CAI5D;;AACA,eAAK,gBAAL,CAAsB,IAAtB,CAA2B,UAA3B;AACA,iBAAO,KAAK,gBAAZ;AACD;AAED;;AAlGF;AAAA;AAAA,kDAmGgC;AAC5B,iBAAO,KAAK,IAAL,CAAU,GAAV,CAA4B,kDAA5B,CAAP;AACD;AArGH;AAAA;AAAA,2CAuG4B,UAvG5B,EAuGgE;AAC5D;AACA,cAAI,CAAC,KAAK,mBAAV,EAA+B;AAC7B;AACA,gBAAM,UAAU,GAAiB,IAAI,sDAAA,CAAA,cAAA,CAAJ,EAAjC;AACA,iBAAK,mBAAL,GAA2B,IAAI,8CAAA,CAAA,WAAA,CAAJ,CAAc,UAAd,CAA3B,CAH6B,CAI7B;;AACA,iBAAK,mBAAL,CAAyB,IAAzB,CAA8B,UAA9B;AACD;;AACD,iBAAO,KAAK,mBAAZ;AACD;AAjHH;AAAA;AAAA,4BAoBmB;AACf,iBAAO,CACL,kCAAK,GAAG,GAAR,CAAY,CAAZ,EAAe,KAAf,EAAsB,GAAtB,CAA0B,CAA1B,EAA6B,MAA7B,EAAqC,GAArC,CAAyC,EAAzC,EAA6C,QAA7C,EAAuD,MAAvD,CAA8D,qBAA9D,CADK,EAEL,kCAAK,GAAG,GAAR,CAAY,CAAZ,EAAe,KAAf,EAAsB,MAAtB,CAA6B,YAA7B,CAFK,EAGL,kCAAK,GAAG,QAAR,CAAiB,CAAjB,EAAoB,OAApB,EAA6B,MAA7B,CAAoC,YAApC,CAHK,EAIL,kCAAK,GAAG,GAAR,CAAY,CAAZ,EAAe,OAAf,EAAwB,MAAxB,CAA+B,YAA/B,CAJK,CAAP;AAMD;AA3BH;;AAAA;AAAA,OAAA;;;;cAO4B,iDAAA,CAAA,YAAA;;;;AAPf,IAAA,UAAU,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CADtB,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,EACsB,E,uEAOK,iDAAA,CAAA,YAAA,C,EAPL,CAAA,EAAV,UAAU,CAAV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCXA,Y,GAAb,wBAAA;AAAA;;AAsBE;AACA;AACA,WAAA,cAAA,GAAyB,kCAAK,GAAG,GAAR,CAAY,CAAZ,EAAe,KAAf,EAAsB,MAAtB,CAA6B,qBAA7B,CAAzB;AACD,K;;QAEY,e;;;;;AAWX,iCAAA;AAAA;;AAAA;;AACE;AAVF,eAAA,OAAA,GAAkB,EAAlB;AACA,eAAA,UAAA,GAAqB,CAArB;AACA,eAAA,KAAA,GAA6B,CAC3B,IAAI,YAAJ,EAD2B,EAE3B,IAAI,YAAJ,EAF2B,EAG3B,IAAI,YAAJ,EAH2B,EAI3B,IAAI,YAAJ,EAJ2B,CAA7B;AAOA;AAEC;;;;iCAEe,K,EAAS;AACvB,eAAK,KAAL,GAAa,KAAb;AACD;;;;MAjBkC,8CAAA,CAAA,YAAA,C","sourcesContent":["import { ShellModel } from '../shell/data-store';\r\n\r\nexport class UserJobModel extends ShellModel {\r\n  job_requests: Array<{\r\n    title: string,\r\n    job_description: string,\r\n    job_area: string,\r\n    job_type: string,\r\n    salary:string;\r\n    salary_type:string;\r\n    status: string,\r\n    date_requested:string,\r\n    numOffers: number}> = [\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        numOffers: 0\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        numOffers: 0\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        numOffers: 0\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        numOffers: 0\r\n    }\r\n  ];\r\n  ongoing_jobs: Array<{\r\n    title: string,\r\n    job_description: string,\r\n    job_area: string,\r\n    job_type: string,\r\n    salary: '',\r\n        salary_type: '',\r\n    status: string,\r\n    progress: string,\r\n    date_requested:string,\r\n    date_approved:string,\r\n    grafter_name:string,\r\n    grafter_image:string,\r\n    expected_delivery: string}> = [\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        progress: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        expected_delivery: '',\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        progress: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        expected_delivery: '',\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        progress: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        expected_delivery: '',\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        progress: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        expected_delivery: '',\r\n    }\r\n  ];\r\n\r\n  completed_jobs: Array<{\r\n    title: string,\r\n    job_description: string,\r\n    job_area: string,\r\n    job_type: string,\r\n    salary: string,\r\n        salary_type: string,\r\n    status: string,\r\n    date_requested:string,\r\n    date_approved:string,\r\n    date_completed:string,\r\n    grafter_name:string,\r\n    grafter_image:string,\r\n    is_rated: boolean,\r\n   rating:number}> = [\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        date_completed: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        is_rated: false,\r\n        rating: 0\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        date_completed: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        is_rated: false,\r\n        rating: 0\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        date_completed: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        is_rated: false,\r\n        rating: 0\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        date_completed: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        is_rated: false,\r\n        rating: 0\r\n    }\r\n  ];\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import * as dayjs from 'dayjs';\n\nimport { ShellModel } from '../../shell/data-store';\n\nexport class JobDetailsModel extends ShellModel {\n  showcaseImages: Array<string> = [\n    '',\n    '',\n    ''\n  ];\n  previewImage: string;\n  logo: string;\n  title: string;\n  code: string;\n  job_type: string;\n  job_status:string;\n  job_location: string;\n  latitude: string;\n  longitude: string;\n  radius:number;\n  job_address:string;\n  min_salary: number;\n  max_salary: number;\n  currency: string;\n  salary_type: number;\n  salary_type_name: string;\n  min_experience:number;\n  max_experience:number;\n  distance:number;\n  job_area:string;\n  job_area_id:number;\n  skills:Array<{id: string, title: string}> = [\n    {\n      id: '',\n      title: ''\n    },\n    {\n      id: '',\n      title: ''\n    },\n    {\n      id: '',\n      title: ''\n    }\n  ];\n  description: string;\n  job_details:Array<{id: string, title: string, description: string}> = [\n    {\n      id: '',\n      title: '',\n      description: ''\n    },\n    {\n      id: '',\n      title: '',\n      description: ''\n    },\n    {\n      id: '',\n      title: '',\n      description: ''\n    }\n  ];\n  // Default mock value\n  // expirationDate = '03/03/2019';\n  expirationDate: string = dayjs().add(5, 'day').format('MM/DD/YYYY HH:mm:ss') as string;\n  relatedDeals: Array<{logo: string, name: string, description: string}> = [\n    {\n      logo: '',\n      name: '',\n      description: ''\n    },\n    {\n      logo: '',\n      name: '',\n      description: ''\n    },\n    {\n      logo: '',\n      name: '',\n      description: ''\n    }\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\nimport * as dayjs from 'dayjs';\n\nimport { JobListingModel } from './listing/jobs-listing.model';\nimport { JobDetailsModel } from './details/job-details.model';\nimport { DataStore } from '../shell/data-store';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { UserJobModel } from '../dbmodels/user-jobs-model';\nimport { environment } from '../../environments/environment';\n\n@Injectable()\nexport class JobService {\n  jobFilterData:any;\n  private listingDataStore: DataStore<JobListingModel>;\n  private detailsDataStore: DataStore<JobDetailsModel>;\n  private jobManagerDataStore: DataStore<UserJobModel>;\n  invokeEvent: Subject<any> = new Subject(); \n  \n  constructor(private http: HttpClient) { }\n\n  getFilterData(){ \n    return this.jobFilterData; \n } \n\n setFilterData(data:any){\n     this.jobFilterData = data;\n     this.invokeEvent.next(data);\n }\n\n\n\n  get relativeDates(): Array<string> {\n    return [\n      dayjs().add(1, 'day').add(8, 'hour').add(10, 'second').format('MM/DD/YYYY HH:mm:ss') as string,\n      dayjs().add(7, 'day').format('MM/DD/YYYY') as string,\n      dayjs().subtract(1, 'month').format('MM/DD/YYYY') as string,\n      dayjs().add(2, 'month').format('MM/DD/YYYY') as string\n    ];\n  }\n\n  // public getListingDataSource(): Observable<JobListingModel> {\n  //   return this.http.get<JobListingModel>('./assets/sample-data/deals/listing.json').pipe(\n  //     map(listingData => {\n  //       // using rest operator to divide the data https://dev.to/napoleon039/how-to-use-the-spread-and-rest-operator-4jbb\n  //       const {items, ...otherData} = listingData;\n\n  //       const itemsWithRelativeDates = items.map((dealItem, index) => {\n  //         // Relative date (better to showcase UI micro-interactions)\n  //         return {...dealItem, expirationDate: this.relativeDates[index]};\n  //       });\n  //       // using spread operator to concat the data https://dev.to/napoleon039/how-to-use-the-spread-and-rest-operator-4jbb\n  //       return {...otherData, items: itemsWithRelativeDates};\n  //     })\n  //   );\n  // }\n\n\n  callJobCreateAPI(apiKey:any, postData: any): Observable<any> {\n    const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': apiKey\n    })\n    };\n    const url = environment.apiUrl + 'job_requests/create';\n    console.log(\"Hiting \"+url+\" with => \"+JSON.stringify(postData)+\" via Token \"+apiKey);\n    return this.http.post(url, postData, httpOptions);\n  }\n\n  public getListingDataSource(apiKey:any, postData:any): Observable<JobListingModel> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': apiKey\n      })\n      };\n      const url = environment.apiUrl + 'job_requests/list';\n      return this.http.post<JobListingModel>(url, postData, httpOptions);\n  }\n\n  public getListingStore(dataSource: Observable<JobListingModel>): DataStore<JobListingModel> {\n    if (!this.listingDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: JobListingModel = new JobListingModel();\n      this.listingDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.listingDataStore.load(dataSource);\n    }\n    return this.listingDataStore;\n  }\n\n  public getDetailsDataSource(): Observable<JobDetailsModel> {\n    return this.http.get<JobDetailsModel>('./assets/sample-data/deals/details.json').pipe(\n      map(detailsData => {\n        const expirationDate = dayjs().add(1, 'day').add(8, 'hour').add(10, 'second').format('MM/DD/YYYY HH:mm:ss') as string;\n        return {...detailsData, expirationDate};\n      })\n    );\n  }\n\n  public getDetailsStore(dataSource: Observable<JobDetailsModel>): DataStore<JobDetailsModel> {\n    // Initialize the model specifying that it is a shell model\n    const shellModel: JobDetailsModel = new JobDetailsModel();\n    this.detailsDataStore = new DataStore(shellModel);\n    // Trigger the loading mechanism (with shell) in the dataStore\n    this.detailsDataStore.load(dataSource);\n    return this.detailsDataStore;\n  }\n\n  /**************** MANAGER PAGES ***************/\n  public getJobManagerDataSource(): Observable<UserJobModel> {\n    return this.http.get<UserJobModel>('./assets/sample-data/user/user-jobs-manager.json');\n  }\n\n  public getJobManagerStore(dataSource: Observable<UserJobModel>): DataStore<UserJobModel> {\n    // Use cache if available\n    if (!this.jobManagerDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: UserJobModel = new UserJobModel();\n      this.jobManagerDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.jobManagerDataStore.load(dataSource);\n    }\n    return this.jobManagerDataStore;\n  }\n   /**************** MANAGER PAGES ***************/\n\n}\n","import * as dayjs from 'dayjs';\n\nimport { ShellModel } from '../../shell/data-store';\n\nexport class JobItemModel {\n  id:number;\n  slug: string;\n  logo: string;\n  title: string;\n  code: string;\n  job_type: string;\n  job_status:string;\n  job_location: string;\n  min_salary: number;\n  max_salary: number;\n  currency: string;\n  salary_type: number;\n  salary_type_name: string;\n  min_experience:number;\n  max_experience:number;\n  distance:number;\n  job_area:string;\n  job_area_id:number;\n  skills:[];\n  description: string;\n  postDate: string;\n  // Default mock value\n  // expirationDate = '12/01/2018';\n  expirationDate: string = dayjs().add(5, 'day').format('MM/DD/YYYY HH:mm:ss') as string;\n}\n\nexport class JobListingModel extends ShellModel {\n  error: true;\n  message: string = \"\";\n  numRecords: number = 0;\n  items: Array<JobItemModel> = [\n    new JobItemModel(),\n    new JobItemModel(),\n    new JobItemModel(),\n    new JobItemModel()\n  ];\n\n  constructor() {\n    super();\n  }\n\n  public setItems(items:any){\n    this.items = items;\n  }\n}\n"],"sourceRoot":"webpack:///","file":"default~jobs-details-job-details-module~jobs-listing-job-filter-job-filter-module~jobs-listing-jobs-~61e8ee3f-es5.js"}