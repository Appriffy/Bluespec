{"version":3,"sources":["./src/app/dashboard/users-summary/users-summary.page.html","./src/app/dashboard/users-summary/users-summary.module.ts","./src/app/dashboard/users-summary/users-summary.page.scss","./src/app/dashboard/users-summary/users-summary.page.ts"],"names":[],"mappings":"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","file":"dashboard-users-summary-users-summary-module-es2015.js","sourcesContent":["export default \"<ion-content class=\\\"firebase-listing-content\\\" style=\\\"background-color: red;\\\">\\n  <!-- <div class=\\\"list\\\" ng-repeat=\\\"things in countryLabels\\\">\\n    {{things}}\\n  </div> -->\\n  <ion-card class=\\\"stats-card\\\">\\n    <ion-card-header>\\n      <ion-card-title justify-content-center>Total Users Summary</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <canvas #barChart></canvas>\\n    </ion-card-content>\\n  </ion-card>\\n\\n\\n  <!-- Segment buttons with text and click listeners -->\\n  <!-- <ion-segment mode=\\\"md\\\" class=\\\"stats-segment\\\" (ionChange)=\\\"segmentButtonClicked($event)\\\">\\n    <ion-segment-button value=\\\"all\\\" checked=\\\"true\\\">\\n      <ion-label>OVERALL DISTRIBUTION</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"grafters\\\">\\n      <ion-label>GRAFTERS</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"employers\\\">\\n      <ion-label>EMPLOYERS</ion-label>\\n    </ion-segment-button>\\n  </ion-segment> -->\\n\\n  <ion-card class=\\\"stats-card\\\">\\n    <ion-card-header>\\n      <ion-card-title justify-content-center>Overall Distribution</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <canvas #barChartForCountry></canvas>\\n    </ion-card-content>\\n  </ion-card> \\n\\n  <ion-card class=\\\"stats-card\\\">\\n    <ion-card-header>\\n      <ion-card-title justify-content-center>Grafters Distribution</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <canvas #barChartForGraftersCountry></canvas>\\n    </ion-card-content>\\n  </ion-card> \\n\\n  <ion-card class=\\\"stats-card\\\">\\n    <ion-card-header>\\n      <ion-card-title justify-content-center>Employers Distribution</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <canvas #barChartForEmployersCountry></canvas>\\n    </ion-card-content>\\n  </ion-card> \\n\\n\\n  <!-- <ion-card class=\\\"stats-card\\\" [hidden]=\\\"tabChoice != 'all'\\\">\\n    <ion-card-header>\\n      <ion-card-title justify-content-center>Overall Distribution</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <canvas #barChartForCountry></canvas>\\n    </ion-card-content>\\n  </ion-card> \\n\\n  <ion-card class=\\\"stats-card\\\" [hidden]=\\\"tabChoice != 'grafters'\\\">\\n    <ion-card-header>\\n      <ion-card-title justify-content-center>Grafters Distribution</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <canvas #barChartForGraftersCountry></canvas>\\n    </ion-card-content>\\n  </ion-card> \\n\\n  <ion-card class=\\\"stats-card\\\" [hidden]=\\\"tabChoice != 'employers'\\\">\\n    <ion-card-header>\\n      <ion-card-title justify-content-center>Employers Distribution</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <canvas #barChartForEmployersCountry></canvas>\\n    </ion-card-content>\\n  </ion-card>  -->\\n  \\n <!------- Loading View ------->\\n <ion-grid style=\\\"height: 100%\\\" *ngIf=\\\"loading\\\">\\n  <ion-row justify-content-center align-items-center style=\\\"height: 100%; flex-direction: column\\\">\\n    <ion-spinner name=\\\"bubbles\\\" style=\\\"width:32px;height:32px;margin:0 auto;stroke:#222;fill:#444;text-align: center;\\\"></ion-spinner>\\n    <h5 style=\\\"text-align: center;columns: #555555;\\\">Loading User Stats</h5>\\n    </ion-row>\\n  </ion-grid>\\n <!------- Loading View ------->\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { UsersSummaryPage } from './users-summary.page';\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsersSummaryPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [UsersSummaryPage]\n})\nexport class UsersSummaryPageModule {}\n","export default \":host {\\n  --page-margin: var(--app-broad-margin);\\n  --detail-sections-margin: var(--app-fair-margin);\\n  --page-background: var(--app-background-shade);\\n}\\n\\n.firebase-listing-content {\\n  background-color: var(--ion-color-danger);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL3VzZXJzLXN1bW1hcnkvRDpcXFdFQiBNQVJLRVRQTEFDRVxcQU5HVUxBUlxcQmx1c3BlYy9zcmNcXGFwcFxcZGFzaGJvYXJkXFx1c2Vycy1zdW1tYXJ5XFx1c2Vycy1zdW1tYXJ5LnBhZ2Uuc2NzcyIsInNyYy9hcHAvZGFzaGJvYXJkL3VzZXJzLXN1bW1hcnkvdXNlcnMtc3VtbWFyeS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxzQ0FBQTtFQUNBLGdEQUFBO0VBQ0EsOENBQUE7QUNDSjs7QURFRTtFQUNFLHlDQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9kYXNoYm9hcmQvdXNlcnMtc3VtbWFyeS91c2Vycy1zdW1tYXJ5LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAgIC0tcGFnZS1tYXJnaW46IHZhcigtLWFwcC1icm9hZC1tYXJnaW4pO1xyXG4gICAgLS1kZXRhaWwtc2VjdGlvbnMtbWFyZ2luOiB2YXIoLS1hcHAtZmFpci1tYXJnaW4pO1xyXG4gICAgLS1wYWdlLWJhY2tncm91bmQ6IHZhcigtLWFwcC1iYWNrZ3JvdW5kLXNoYWRlKTtcclxuICB9XHJcblxyXG4gIC5maXJlYmFzZS1saXN0aW5nLWNvbnRlbnR7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItZGFuZ2VyKTtcclxuICAgIFxyXG4gIH0iLCI6aG9zdCB7XG4gIC0tcGFnZS1tYXJnaW46IHZhcigtLWFwcC1icm9hZC1tYXJnaW4pO1xuICAtLWRldGFpbC1zZWN0aW9ucy1tYXJnaW46IHZhcigtLWFwcC1mYWlyLW1hcmdpbik7XG4gIC0tcGFnZS1iYWNrZ3JvdW5kOiB2YXIoLS1hcHAtYmFja2dyb3VuZC1zaGFkZSk7XG59XG5cbi5maXJlYmFzZS1saXN0aW5nLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItZGFuZ2VyKTtcbn0iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Chart } from 'chart.js';\nimport { StorageService } from '../../services/storage.service';\nimport { AuthConstants } from '../../config/AuthConstants';\n\n@Component({\n  selector: 'app-users-summary',\n  templateUrl: './users-summary.page.html',\n  styleUrls: ['./users-summary.page.scss'],\n})\nexport class UsersSummaryPage implements OnInit {\n  @ViewChild('barChart', {static: false}) barChart;\n  bars: any;\n  colorArray: any;\n  statsSummary:any;\n\n  countryLabels:string[] = [];\n  countryAllUsersDataset:string[] = [];\n  countryGraftersLabels:string[] = [];\n  countryAllGraftersDataset:string[] = [];\n  countryEmployersLabels:string[] = [];\n  countryAllEmployersDataset:string[] = [];\n  tabChoice: string = \"all\";\n\n  //Countries\n  @ViewChild('barChartForCountry', {static: false}) barChartForCountry;\n  barsForCountry: any;\n  @ViewChild('barChartForGraftersCountry', {static: false}) barChartForGraftersCountry;\n  barsForCountryGrafters: any;\n  @ViewChild('barChartForEmployersCountry', {static: false}) barChartForEmployersCountry;\n  barsForCountryEmployers: any;\n  \n\n//countryLabels = ['India', 'Pak', 'Toio'];\n\n\n  constructor(private storageService: StorageService) { }\n\n  ngOnInit() {\n  }\n\n\nionViewDidEnter() {\n  this.createBarChart();\n\n  this.storageService.get(AuthConstants.DASHBOARD_STATS_SUMMARY_CACHE).then(dashData=>{\nif(dashData){\n  //var json = JSON.parse(dashData);\nthis.statsSummary = dashData;\n\nconsole.log(\"PARSING JSON FOR GRAPHS: \"+JSON.stringify(this.statsSummary.totalUsersByCountry));\n\n\n/*********** SHOW ALL USERS - COUNTRY DISTRIBUTION **********/\nthis.statsSummary.totalUsersByCountry.forEach(element => {\n  //console.log(\"PARSING GOT => \"+JSON.stringify(element));\n  element.forEach(subElement => {\n    //console.log(\"PARSING GOT AGAIN => \"+JSON.stringify(subElement));\n    if(subElement){\n    //console.log(\"PARSING EXACTLY => \"+subElement.country);\n    try{\n      if(subElement.country !== null && subElement.country !== \"\" && subElement.country !==\"Array\" ){\n        this.countryLabels.push(subElement.country);\n        this.countryAllUsersDataset.push(subElement.numUsers);\n      }\n    }catch(Exception){\n      alert(Exception.toString());\n    }\n    }\n  });\n});\nthis.createBarChartForCountry();\n/*********** SHOW ALL USERS - COUNTRY DISTRIBUTION **********/\n\n\n/*********** SHOW ALL GRAFTERS - COUNTRY DISTRIBUTION **********/\nthis.statsSummary.totalGraftersByCountry.forEach(element => {\n  console.log(\"PARSING GOT => \"+JSON.stringify(element));\n  element.forEach(subElement => {\n    console.log(\"PARSING GOT AGAIN => \"+JSON.stringify(subElement));\n    if(subElement){\n    console.log(\"PARSING EXACTLY => \"+subElement.country);\n    try{\n      if(subElement.country !== null && subElement.country !== \"\" && subElement.country !==\"Array\" ){\n        this.countryGraftersLabels.push(subElement.country);\n        this.countryAllGraftersDataset.push(subElement.numUsers);\n      }\n    }catch(Exception){\n      alert(Exception.toString());\n    }\n    }\n  });\n});\nthis.createBarChartForCountryGrafters();\n/*********** SHOW ALL GRAFTERS - COUNTRY DISTRIBUTION **********/\n\n\n\n\n/*********** SHOW ALL GRAFTERS - COUNTRY DISTRIBUTION **********/\nthis.statsSummary.totalEmployersByCountry.forEach(element => {\n  console.log(\"PARSING GOT => \"+JSON.stringify(element));\n  element.forEach(subElement => {\n    console.log(\"PARSING GOT AGAIN => \"+JSON.stringify(subElement));\n    if(subElement){\n    console.log(\"PARSING EXACTLY => \"+subElement.country);\n    try{\n      if(subElement.country !== null && subElement.country !== \"\" && subElement.country !==\"Array\" ){\n        this.countryEmployersLabels.push(subElement.country);\n        this.countryAllEmployersDataset.push(subElement.numUsers);\n      }\n    }catch(Exception){\n      alert(Exception.toString());\n    }\n    }\n  });\n});\nthis.createBarChartForCountryEmployers();\n/*********** SHOW ALL GRAFTERS - COUNTRY DISTRIBUTION **********/\n\n\n}\n  });\n  \n}\n\nsegmentButtonClicked(ev) {\n  //console.log('Segment button clicked', ev);\n  this.tabChoice = ev.detail.value;\n  console.log('Selected Choice: ', this.tabChoice);\n}\n\ncreateBarChart() {\n  this.bars = new Chart(this.barChart.nativeElement, {\n    type: 'bar',\n    data: {\n      labels: ['Grafters', 'Employers', 'Total Users'],\n      datasets: [{\n        label: 'Active ',\n        data: [38, 7, 45],\n        backgroundColor: 'rgb(38, 194, 129)', // array should have same number of elements as number of dataset\n        borderColor: 'rgb(38, 194, 129)',// array should have same number of elements as number of dataset\n        borderWidth: 1\n      },\n      {\n        label: 'Pending',\n        data: [7, 4, 11],\n        backgroundColor: 'rgb(125, 110, 200)', // array should have same number of elements as number of dataset\n        borderColor: 'rgb(38, 194, 129)',// array should have same number of elements as number of dataset\n        borderWidth: 1\n      },\n      {\n        label: 'Blocked',\n        data: [0, 1, 1],\n        backgroundColor: 'rgb(225, 0, 0)', // array should have same number of elements as number of dataset\n        borderColor: 'rgb(38, 194, 129)',// array should have same number of elements as number of dataset\n        borderWidth: 1\n      }]\n    },\n    options: {\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    }\n  });\n}\n\ncreateBarChartForCountry() {\n  this.barsForCountry = new Chart(this.barChartForCountry.nativeElement, {\n    type: 'bar',\n    data: {\n      labels: this.countryLabels,\n      datasets: [{\n        label: 'All Users',\n        data: this.countryAllUsersDataset,\n        backgroundColor: 'rgb(38, 94, 220)', // array should have same number of elements as number of dataset\n        borderColor: 'rgb(38, 220, 129)',// array should have same number of elements as number of dataset\n        borderWidth: 1\n      }]\n    },\n    options: {\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    }\n  });\n}\n\ncreateBarChartForCountryEmployers() {\n  this.barsForCountryEmployers = new Chart(this.barChartForEmployersCountry.nativeElement, {\n    type: 'bar',\n    data: {\n      labels: this.countryEmployersLabels,\n      datasets: [{\n        label: 'All Employers',\n        data: this.countryAllEmployersDataset,\n        backgroundColor: 'rgb(38, 94, 220)', // array should have same number of elements as number of dataset\n        borderColor: 'rgb(38, 220, 129)',// array should have same number of elements as number of dataset\n        borderWidth: 1\n      }]\n    },\n    options: {\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    }\n  });\n}\n\n\ncreateBarChartForCountryGrafters() {\n  this.barsForCountryGrafters = new Chart(this.barChartForGraftersCountry.nativeElement, {\n    type: 'bar',\n    data: {\n      labels: this.countryGraftersLabels,\n      datasets: [{\n        label: 'All Grafters',\n        data: this.countryAllGraftersDataset,\n        backgroundColor: 'rgb(38, 94, 220)', // array should have same number of elements as number of dataset\n        borderColor: 'rgb(38, 220, 129)',// array should have same number of elements as number of dataset\n        borderWidth: 1\n      }]\n    },\n    options: {\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    }\n  });\n}\n\n\n}\n"],"sourceRoot":"webpack:///"}