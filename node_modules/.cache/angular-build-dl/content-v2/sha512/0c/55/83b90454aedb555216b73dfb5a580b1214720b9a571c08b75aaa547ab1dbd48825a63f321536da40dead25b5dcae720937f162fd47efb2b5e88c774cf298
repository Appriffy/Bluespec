{"version":3,"sources":["./src/app/dbmodels/job-applications-manager-model.ts","./src/app/dbmodels/job-filter-cache.ts","./src/app/dbmodels/jobs-listing.model.ts","./src/app/dbmodels/user-jobs-model.ts","./src/app/jobs/jobs.service.ts"],"names":[],"mappings":"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","file":"default~details-job-details-module~job-applications-manager-manager-module~jobs-accept-job-form-acce~c0d0a811-es2015.js","sourcesContent":["import { ShellModel } from '../shell/data-store';\r\nimport { JobApplicationModel } from './job-application.model';\r\n\r\nexport class JobApplicationsManagerModel extends ShellModel {\r\n  pending: Array<JobApplicationModel> = [\r\n    {\r\n        id: 0,\r\n        applicant_id: 0,\r\n        applicant_name: '',\r\n        applicant_image: '',\r\n        user_name: '',\r\n        amount:'',\r\n        salary_type: '',\r\n        delivery_date: '',\r\n        status: '',\r\n        qcode: '',\r\n        comment: '',\r\n        job_id: 0,\r\n        currency: '',\r\n        jobTitle: '',\r\n        jobCode: '',\r\n        date_created: ''\r\n    }\r\n  ];\r\n  shortlisted: Array<JobApplicationModel> = [\r\n    {\r\n        id: 0,\r\n        applicant_id: 0,\r\n        applicant_name: '',\r\n        applicant_image: '',\r\n        user_name: '',\r\n        amount:'',\r\n        salary_type: '',\r\n        delivery_date: '',\r\n        status: '',\r\n        qcode: '',\r\n        comment: '',\r\n        job_id: 0,\r\n        currency: '',\r\n        jobTitle: '',\r\n        jobCode: '',\r\n        date_created: ''\r\n    }\r\n  ];\r\n\r\n  rejected: Array<JobApplicationModel> = [\r\n    {\r\n        id: 0,\r\n        applicant_id: 0,\r\n        applicant_name: '',\r\n        applicant_image: '',\r\n        user_name: '',\r\n        amount:'',\r\n        salary_type: '',\r\n        delivery_date: '',\r\n        status: '',\r\n        qcode: '',\r\n        comment: '',\r\n        job_id: 0,\r\n        currency: '',\r\n        jobTitle: '',\r\n        jobCode: '',\r\n        date_created: ''\r\n    },\r\n    {\r\n        id: 0,\r\n        applicant_id: 0,\r\n        applicant_name: '',\r\n        applicant_image: '',\r\n        user_name: '',\r\n        amount:'',\r\n        salary_type: '',\r\n        delivery_date: '',\r\n        status: '',\r\n        qcode: '',\r\n        comment: '',\r\n        job_id: 0,\r\n        currency: '',\r\n        jobTitle: '',\r\n        jobCode: '',\r\n        date_created: ''\r\n    }\r\n  ];\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","export class JobFilterCache{\r\n    jobArea:number = 0;\r\n    skillID:string = \"\";\r\n    address:string = \"\";\r\n    latitude:string = \"\";\r\n    longitude:string = \"\";\r\n    km_radius:number = 5000;\r\n    status:string = \"Active\";\r\n\r\n    //Complex Filters\r\n    job_type: number[];\r\n    job_types:string = \"\";\r\n    online_status:string = \"\";\r\n    selected_skills_arr:number[];\r\n    //selected_skills:string = \"\";\r\n\r\n    min_salary:number= 0;\r\n    max_salary:number= 0;\r\n\r\n    salary_type: string = \"\";\r\n    currency: string = \"USD\";\r\n    sort_by: string = \"RELEVANCE\";\r\n    work_experience_min:number = 0;\r\n    work_experience_max:number = 10;\r\n    salary_range:{\"lower\":0,\"upper\":5};\r\n\r\n    constructor(){\r\n\r\n    }\r\n}","import * as dayjs from 'dayjs';\n\nimport { ShellModel } from '../shell/data-store';\nimport { CompanyModel } from './company-model';\n\nexport class JobItemModel extends ShellModel{\n  id:number;\n  title: string;\n  qcode: string;\n  job_description: string;\n  user_id: number;\n  job_type: number;\n  job_type_name: string;\n  status:string;\n  category_id: number;\n  currency: string;\n  salary_type: string;\n  job_area: number;\n  job_area_name: string;\n  distance:number;\n  latitude:number;\n  longitude:number;\n  address:string;\n  date_created:string;\n  date_updated:string;\n  date_closing:string;\n\n  numApplications:number;\n  numShortlists:number;\n  numViews:number;\n  numTotalViews:number;\n\n  //Personal Stats\n  numMyViews:number;\n  hasApplied:boolean;\n  applicationStatus:string;\n\n  jobSkills: Array<{\n    id: number, title: string}> = [\n      {id:0, title:''},\n      {id:0, title:''},\n      {id:0, title:''},\n     {id:0, title:''}\n  ];\n  jobPrefs:JobRequestPrefs;\n  jobSalary: JobRequestSalary;\n  company: CompanyModel;\n  expirationDate: string;\n  //expirationDate: string = dayjs().add(5, 'day').format('MM/DD/YYYY HH:mm:ss') as string;\n}\n\n\nexport class JobRequestPrefs{\n    id: string;\n    job_id: number;\n    is_loc_enabled:number;\n    notify_range:number;\n    minExp:number;\n    maxExp:number;\n    enableCustomOffer:number;\n    notify_email:string;\n}\n\nexport class JobRequestSalary{\n  id: string;\n  job_id: number;\n  min_salary:number;\n  max_salary:number;\n  fixed_fee:number;\n  min_rate_per_hour:number;\n  max_rate_per_hour:number;\n}\n\nexport class JobListingModel extends ShellModel {\n  error: true;\n  message: string = \"\";\n  numRecords: number = 0;\n  items: Array<JobItemModel> = [\n    new JobItemModel(),\n    new JobItemModel(),\n    new JobItemModel(),\n    new JobItemModel()\n  ];\n\n  constructor() {\n    super();\n  }\n\n  public setItems(items:any){\n    this.items = items;\n  }\n}\n","import { ShellModel } from '../shell/data-store';\r\n\r\nexport class UserJobModel extends ShellModel {\r\n  job_requests: Array<{\r\n    title: string,\r\n    job_description: string,\r\n    job_area: string,\r\n    job_type: string,\r\n    salary:string;\r\n    salary_type:string;\r\n    status: string,\r\n    date_requested:string,\r\n    numOffers: number}> = [\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        numOffers: 0\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        numOffers: 0\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        numOffers: 0\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        numOffers: 0\r\n    }\r\n  ];\r\n  ongoing_jobs: Array<{\r\n    title: string,\r\n    job_description: string,\r\n    job_area: string,\r\n    job_type: string,\r\n    salary: '',\r\n    salary_type: '',\r\n    status: string,\r\n    progress: string,\r\n    date_requested:string,\r\n    date_approved:string,\r\n    grafter_name:string,\r\n    grafter_image:string,\r\n    expected_delivery: string}> = [\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        progress: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        expected_delivery: '',\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        progress: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        expected_delivery: '',\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        progress: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        expected_delivery: '',\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        progress: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        expected_delivery: '',\r\n    }\r\n  ];\r\n\r\n  completed_jobs: Array<{\r\n    title: string,\r\n    job_description: string,\r\n    job_area: string,\r\n    job_type: string,\r\n    salary: string,\r\n        salary_type: string,\r\n    status: string,\r\n    date_requested:string,\r\n    date_approved:string,\r\n    date_completed:string,\r\n    grafter_name:string,\r\n    grafter_image:string,\r\n    is_rated: boolean,\r\n   rating:number}> = [\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        date_completed: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        is_rated: false,\r\n        rating: 0\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        date_completed: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        is_rated: false,\r\n        rating: 0\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        date_completed: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        is_rated: false,\r\n        rating: 0\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        date_completed: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        is_rated: false,\r\n        rating: 0\r\n    }\r\n  ];\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\nimport * as dayjs from 'dayjs';\n\nimport { JobListingModel, JobItemModel } from '../dbmodels/jobs-listing.model';\nimport { DataStore } from '../shell/data-store';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { UserJobModel } from '../dbmodels/user-jobs-model';\nimport { environment } from '../../environments/environment';\nimport { JobApplicationsManagerModel } from '../dbmodels/job-applications-manager-model';\nimport { AuthConstants } from '../config/AuthConstants';\nimport { StorageService } from '../services/storage.service';\nimport { JobFilterCache } from '../dbmodels/job-filter-cache';\nimport { ToastService } from '../services/toast.service';\n\n@Injectable()\nexport class JobService {\n  jobFilterData:JobFilterCache;\n  invokeFilterChangeEvent: Subject<any> = new Subject();\n  private listingDataStore: DataStore<JobListingModel>;\n  private detailsDataStore: DataStore<JobItemModel>;\n  private jobManagerDataStore: DataStore<UserJobModel>;\n  private jobApplicationsManagerDataStore: DataStore<JobApplicationsManagerModel>;\n  //invokeEvent: Subject<any> = new Subject();\n  \n  constructor(private http: HttpClient, \n    private toastService: ToastService,\n    private storageService: StorageService) { }\n\n  getFilterData() : JobFilterCache{\n    if(this.jobFilterData !== null && this.jobFilterData !== undefined){\n      return this.jobFilterData; \n    }else{\n      if(AuthConstants.DEV_MODE){\n        this.toastService.presentToast(\"Returning New Cache Box\");\n      }\n      return new JobFilterCache(); \n    }\n } \n\n setFilterData(data:any){\n     this.jobFilterData = data;\n     //this.invokeEvent.next(data);\n     this.invokeFilterChangeEvent.next(data);\n     this.storageService.store(AuthConstants.USER_FILTER_CACHE, data);\n     this.storageService.get(AuthConstants.USER_FILTER_CACHE).then(results=>{\n       //alert(results);\n     });\n }\n\n\n\n  get relativeDates(): Array<string> {\n    return [\n      dayjs().add(1, 'day').add(8, 'hour').add(10, 'second').format('MM/DD/YYYY HH:mm:ss') as string,\n      dayjs().add(7, 'day').format('MM/DD/YYYY') as string,\n      dayjs().subtract(1, 'month').format('MM/DD/YYYY') as string,\n      dayjs().add(2, 'month').format('MM/DD/YYYY') as string\n    ];\n  }\n\n  // public getListingDataSource(): Observable<JobListingModel> {\n  //   return this.http.get<JobListingModel>('./assets/sample-data/deals/listing.json').pipe(\n  //     map(listingData => {\n  //       // using rest operator to divide the data https://dev.to/napoleon039/how-to-use-the-spread-and-rest-operator-4jbb\n  //       const {items, ...otherData} = listingData;\n\n  //       const itemsWithRelativeDates = items.map((dealItem, index) => {\n  //         // Relative date (better to showcase UI micro-interactions)\n  //         return {...dealItem, expirationDate: this.relativeDates[index]};\n  //       });\n  //       // using spread operator to concat the data https://dev.to/napoleon039/how-to-use-the-spread-and-rest-operator-4jbb\n  //       return {...otherData, items: itemsWithRelativeDates};\n  //     })\n  //   );\n  // }\n\n\n  callJobCreateAPI(apiKey:any, postData: any): Observable<any> {\n    const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': apiKey\n    })\n    };\n    const url = environment.apiUrl + 'job_requests/create';\n    console.log(\"Hiting \"+url+\" with => \"+JSON.stringify(postData)+\" via Token \"+apiKey);\n    return this.http.post(url, postData, httpOptions);\n  }\n\n  public getListingDataSource(apiKey:any, postData:any): Observable<JobListingModel> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': apiKey\n      })\n      };\n      const url = environment.apiUrl + 'job_requests/list';\n      console.log(\"Hiting \"+url+\" with => \"+JSON.stringify(postData)+\" via Token \"+apiKey);\n      return this.http.post<JobListingModel>(url, postData, httpOptions);\n  }\n\n  public getListingStore(dataSource: Observable<JobListingModel>): DataStore<JobListingModel> {\n    if (!this.listingDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: JobListingModel = new JobListingModel();\n      this.listingDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.listingDataStore.load(dataSource);\n    }\n    return this.listingDataStore;\n  }\n\n  public getDetailsStore(dataSource: Observable<JobItemModel>): DataStore<JobItemModel> {\n    // Initialize the model specifying that it is a shell model\n    const shellModel: JobItemModel = new JobItemModel();\n    this.detailsDataStore = new DataStore(shellModel);\n    // Trigger the loading mechanism (with shell) in the dataStore\n    this.detailsDataStore.load(dataSource);\n    return this.detailsDataStore;\n  }\n\n     /**************** GET JOB DETAIL ******************/\n     public getJobRequestDetailDataSource(api_key:any, user_id:any): Observable<any> {\n      let postData = {qcode: user_id};    \n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  'application/json',\n          'Authorization': api_key\n        })\n        };\n        const url = environment.apiUrl + 'apis/job_requests/viewer';\n        console.log(\"/************/ Hitting \"+url+\" with Qcode=> \"+user_id+\" via \"+api_key);\n        return this.http.post<any>(url, postData, httpOptions);\n\n        // return this.http.post<any>(url, postData, httpOptions).pipe(\n        //   map(detailsData => {\n        //     const expirationDate = dayjs().add(1, 'day').add(8, 'hour').add(10, 'second').format('MM/DD/YYYY HH:mm:ss') as string;\n        //     return {...detailsData, expirationDate};\n        //   })\n        // );\n  \n    }\n    /*******************************/\n\n  /**************** JOB MANAGER PAGES ***************/\n  public getJobManagerDataSource(apiKey:any): Observable<UserJobModel> {\n    //return this.http.get<UserJobModel>('./assets/sample-data/user/user-jobs-manager.json');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': apiKey\n      })\n      };\n      let postData = {};\n      const url = environment.apiUrl + 'apis/job_requests/manager';\n      //const url = environment.apiUrl + 'apis/job_requests/manager/delll';\n      //return this.http.post<JobApplications0ManagerModel>(url, postData, httpOptions);\n      return this.http.post<any>(url, postData, httpOptions).pipe(\n        map(detailsData => {\n          return detailsData.items;\n        })\n      );\n  }\n\n  public getJobManagerStore(dataSource: Observable<UserJobModel>): DataStore<UserJobModel> {\n    // Use cache if available\n    if (!this.jobManagerDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: UserJobModel = new UserJobModel();\n      this.jobManagerDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.jobManagerDataStore.load(dataSource);\n    }\n    return this.jobManagerDataStore;\n  }\n   /**************** JOB MANAGER PAGES ***************/\n\n\n\n  /**************** JOB APPLICATIONS ******************/\n  callSubmitApplicationAPI(apiKey:any, postData: any): Observable<any> {\n    const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': apiKey\n    })\n    };\n    const url = environment.apiUrl + 'apis/job_applications/create';\n    console.log(\"Hiting \"+url+\" with => \"+JSON.stringify(postData)+\" via Token \"+apiKey);\n    return this.http.post(url, postData, httpOptions);\n  }\n\n  callApplicationStatusUpdateAPI(apiKey:any, postData: any): Observable<any> {\n    const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': apiKey\n    })\n    };\n    const url = environment.apiUrl + 'apis/job_applications/processing/update';\n    console.log(\"Hiting \"+url+\" with => \"+JSON.stringify(postData)+\" via Token \"+apiKey);\n    return this.http.post(url, postData, httpOptions);\n  }\n\n   /**************** JOB MANAGER PAGES ***************/\n   public getJobApplicationsManagerDataSource(apiKey:any, postData: any): Observable<any> {\n    //return this.http.get<JobApplicationsManagerModel>('./assets/sample-data/job-applications.json');\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': apiKey\n      })\n      };\n      const url = environment.apiUrl + 'apis/job_applications/manager';\n      //return this.http.post<JobApplicationsManagerModel>(url, postData, httpOptions);\n\n      return this.http.post<any>(url, postData, httpOptions).pipe(\n        map(detailsData => {\n          return detailsData.items;\n        })\n      );\n  }\n\n  public getJobApplicationsManagerStore(dataSource: Observable<JobApplicationsManagerModel>): DataStore<JobApplicationsManagerModel> {\n    // Use cache if available\n    if (!this.jobApplicationsManagerDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: JobApplicationsManagerModel = new JobApplicationsManagerModel();\n      this.jobApplicationsManagerDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.jobApplicationsManagerDataStore.load(dataSource);\n    }\n    return this.jobApplicationsManagerDataStore;\n  }\n   /**************** JOB MANAGER PAGES ***************/\n\n /****************####### END OF JOB APPLICATIONS ########******************/\n\n\n\n   /************* JOB VIEWS***********/\n   hitJobViewsAPI(apiKey:any, postData: any): Observable<any> {\n    const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': apiKey\n    })\n    };\n    const url = environment.apiUrl + '/apis/job_requests/register-views';\n    console.log(\"Hiting \"+url+\" with => \"+JSON.stringify(postData)+\" via Token \"+apiKey);\n    return this.http.post(url, postData, httpOptions);\n  }\n  /************* JOB VIEWS***********/\n\n\n}\n"],"sourceRoot":"webpack:///"}