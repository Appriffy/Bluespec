{"version":3,"sources":["./src/app/app-masters/job-areas/details/job-areas-details.page.html","./src/app/app-masters/job-areas/details/job-areas-details.module.ts","./src/app/app-masters/job-areas/details/job-areas-details.page.ts","./src/app/app-masters/job-areas/details/job-areas-details.resolver.ts"],"names":[],"mappings":"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","file":"details-job-areas-details-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"job-skills/listing\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{user?.title}}</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"openItemUpdateModal()\\\" *ngIf=\\\"localUser?.role_id == 1 && user\\\">\\n        Edit\\n      </ion-button>\\n      <ion-button *ngIf=\\\"user\\\" fill=\\\"clear\\\" color=\\\"light\\\" class=\\\"filters-btn\\\" (click)=\\\"favouriteJobArea()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"heart\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"user-content\\\">\\n  <!------ Top Header Main ---->\\n  <div class=\\\"recipes-wrapper\\\">\\n    <div class=\\\"recipes-list\\\">\\n      <div class=\\\"recipe-item\\\">\\n\\n        <!----- SECTION 1: BASIC ITEM DETAILS ----->\\n        <app-image-shell class=\\\"recipe-cover-image\\\" [mode]=\\\"'cover'\\\" [src]=\\\"'./assets/images/banner.jpg'\\\">\\n          <app-aspect-ratio [ratio]=\\\"{w:12, h:3}\\\">\\n          </app-aspect-ratio>\\n        </app-image-shell>\\n        <div class=\\\"chef-picture-wrapper\\\">\\n          <app-aspect-ratio [ratio]=\\\"{w: 1, h: 1}\\\">\\n            <app-image-shell style=\\\"background-color: white;border-radius: 10px;padding:8px;\\\"  class=\\\"chef-picture-image\\\" [src]=\\\"user?.image\\\" [alt]=\\\"'Job Area Image'\\\"></app-image-shell>\\n          </app-aspect-ratio>\\n        </div>\\n     \\n        <div class=\\\"recipe-call-to-action\\\">\\n         \\n          <h3 class=\\\"recipe-name\\\">\\n            <app-text-shell [data]=\\\"user?.title\\\"></app-text-shell>\\n          </h3>\\n\\n          <h5 class=\\\"user-name\\\" *ngIf=\\\"user?.parent_name\\\">\\n            <app-text-shell animation=\\\"bouncing\\\" [data]=\\\"user?.parent_name\\\"></app-text-shell>\\n          </h5>\\n\\n          <span class=\\\"recipe-chef\\\" *ngIf=\\\"user && user?.jobSkills.length <=0\\\" style=\\\"margin-top:2px;\\\">\\n            <app-text-shell [data]=\\\"'No job skills listed for '+user?.title\\\"></app-text-shell>\\n           </span>\\n\\n           <span class=\\\"recipe-chef\\\" *ngIf=\\\"user && user?.jobSkills.length > 0\\\" style=\\\"margin-top:2px;\\\">\\n            <app-text-shell [data]=\\\"user?.jobSkills.length+' job skills listed for '+user?.title\\\"></app-text-shell>\\n           </span>\\n\\n           <h5 class=\\\"normalText\\\" *ngIf=\\\"user && user?.job_area_desc\\\">\\n            <app-text-shell [data]=\\\"user?.job_area_desc\\\"></app-text-shell>\\n           </h5>\\n\\n        </div>\\n<!----- SECTION 1: BASIC ITEM DETAILS ----->\\n\\n\\n        <!----- SECTION 2: STAT BOX ----->\\n        <hr class=\\\"details-divider\\\">\\n        <ion-row class=\\\"details-scores recipe-attributes\\\">\\n          <ion-col class=\\\"score-item attribute-score\\\">\\n            <ion-icon class=\\\"score-icon\\\" src=\\\"./assets/sample-icons/side-menu/briefcase.svg\\\"></ion-icon>\\n            <div class=\\\"score-value\\\">\\n              <app-text-shell *ngIf=\\\"user\\\" [data]=\\\"user?.numJobs+' Jobs'\\\"></app-text-shell>\\n            </div>\\n          </ion-col>\\n\\n          <ion-col class=\\\"score-item attribute-score\\\">\\n            <ion-icon class=\\\"score-icon\\\" src=\\\"./assets/sample-icons/side-menu/tags.svg\\\"></ion-icon>\\n            <div class=\\\"score-value\\\">\\n              <app-text-shell *ngIf=\\\"user\\\" [data]=\\\"user?.numJobSkills+' Skills'\\\"></app-text-shell>\\n            </div>\\n          </ion-col>\\n\\n          <ion-col class=\\\"score-item attribute-score\\\">\\n            <ion-icon class=\\\"score-icon\\\" src=\\\"./assets/sample-icons/side-menu/heart.svg\\\"></ion-icon>\\n            <div class=\\\"score-value\\\">\\n              <app-text-shell *ngIf=\\\"user\\\" [data]=\\\"user?.numFavourites+' Likes'\\\"></app-text-shell>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <hr class=\\\"details-divider\\\">\\n        <!----- SECTION 2: STAT BOX ----->\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n<!----- SECTION 3: LIST JOB SKILLS ----->\\n  <ion-row class=\\\"details-tags\\\" style=\\\"margin-top:15px;\\\">\\n    <ion-col class=\\\"tag-wrapper\\\" *ngFor=\\\"let tag of user?.jobSkills\\\">\\n      <span class=\\\"item-tag\\\">\\n        <app-text-shell [data]=\\\"tag.title\\\"></app-text-shell>\\n      </span>\\n    </ion-col>\\n  </ion-row>\\n<!----- SECTION 3: LIST JOB SKILLS ----->\\n\\n\\n<!----- SECTION 4: PROMO BOX ----->\\n  <ion-row class=\\\"promo-row\\\" *ngIf=\\\"user\\\">   \\n    <ion-col size=\\\"10\\\">\\n      <p class=\\\"promo-description\\\">\\n        Looking for jobs in {{user?.title}}? Find most relevant jobs in areas of your choice.\\n      </p>\\n    </ion-col>\\n    <ion-col size=\\\"6\\\">\\n      <ion-button class=\\\"promo-code-btn\\\" expand=\\\"block\\\" shape=\\\"round\\\" fill=\\\"outline\\\" color=\\\"claim\\\">\\n        <span class=\\\"promo-code\\\">\\n          <app-text-shell [data]=\\\"'SUBSCRIBE'\\\"></app-text-shell>\\n        </span>\\n      </ion-button>\\n    </ion-col>\\n  </ion-row>\\n<!----- SECTION 4: PROMO BOX ----->\\n\\n</ion-content>\\n\\n<ion-footer style=\\\"background-color:#eeeeee;\\\">\\n  <ion-row class=\\\"details-purchase-options-row\\\">\\n    <ion-col size=\\\"6\\\">\\n      <ion-button routerLink=\\\"['/job-requests', {jobAreas: user?.id} ]\\\" class=\\\"select-variant-btn\\\" color=\\\"secondary\\\" expand=\\\"block\\\" fill=\\\"solid\\\">FIND JOBS</ion-button>\\n    </ion-col>\\n    <ion-col size=\\\"6\\\" class=\\\"main-call-to-action-col\\\">\\n      <ion-button routerLink=\\\"['/post-new-job', user?.id]\\\" class=\\\"add-to-cart-btn\\\" color=\\\"dark\\\" expand=\\\"block\\\" fill=\\\"solid\\\">HIRE NOW</ion-button>\\n    </ion-col>\\n  </ion-row>\\n\\n</ion-footer>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../../components/components.module';\nimport { JobAreasDetailsResolver } from './job-areas-details.resolver';\nimport { JobAreasDetailsPage } from './job-areas-details.page';\nimport { JobAreasService } from '../job-areas.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: JobAreasDetailsPage,\n    resolve: {\n      data: JobAreasDetailsResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule\n  ],\n  declarations: [JobAreasDetailsPage],\n  providers: [\n    JobAreasService, JobAreasDetailsResolver\n  ]\n})\nexport class JobAreasDetailModule {}\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { JobAreaDetailModel } from '../../../dbmodels/job-areas';\nimport { JobAreasService } from '../job-areas.service';\nimport { UpdateJobAreaModal } from '../update/update-job-area.modal';\nimport { LocalUser } from '../../../dbmodels/local-user';\nimport { AuthService } from '../../../services/auth.service';\nimport { AuthConstants } from '../../../config/AuthConstants';\n\n@Component({\n  selector: 'app-job-areas-details',\n  templateUrl: './job-areas-details.page.html',\n  styleUrls: [\n    '../../../bluspecstyles/details.page.scss',\n    '../../../bluspecstyles/details.shell.scss'\n  ],\n})\nexport class JobAreasDetailsPage implements OnInit {\n  user: JobAreaDetailModel;\n  item_id:any;\n  localUser:LocalUser;\n  \n // relatedUsers: Array<FirebaseListingItemModel> & ShellModel;\n  @HostBinding('class.is-shell') get isShell() {\n    return ((this.user && this.user.isShell)) ? true : false;\n  }\n\n  constructor(\n    public firebaseService: JobAreasService,\n    private authService: AuthService,\n    public modalController: ModalController,\n    public router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n\n  ionViewDidEnter(){\n    //Subscribe to any auth changes event\n    console.log(\"ionViewDidEnter\");\n    //this.firebaseService.getListingDataSource();\n  }\n\n  ngOnInit() {\n    this.authService.getAuthCache().then(promisedValue=>{\n      this.localUser = promisedValue;\n      console.log(\"/***** JUST ASKED LOCAL STORAGE : \"+JSON.stringify(promisedValue));\n    });\n\n    this.firebaseService.invokeItemUpdatedEvent.subscribe(value => {\n      this.user = value;\n            if(AuthConstants.DEV_MODE){\n              console.log(\" @@@@@@@@@@ GREAT UPDATE SYNC \"+JSON.stringify(value));\n              }\n        });\n    \n      this.route.paramMap.subscribe(params => {\n        this.item_id = params.get(\"id\");\n        //alert(this.item_id);\n        if(this.item_id <= 0){\n          this.router.navigate(['page-not-found']);\n        }\n        });\n\n   \n    var postData = {\n      item_id: this.item_id,\n      sort_by: 0\n      };\n\n     this.firebaseService.getDetailsDataSource(postData).subscribe(\n      (res: any) => {\n        console.log(\"Job Skill Profile: \"+JSON.stringify(res)); \n      this.user = res;\n      console.log(\"Job Skill Profile: \"+this.user);\n      if (res.error) {\n        this.router.navigate(['page-not-found']);\n      }\n      },\n      (error: any) => {\n      console.log('Looks like there is a Network Issue.');\n      }\n      );\n      console.log(\"Done fetching Job Skills.\");\n  }\n\n  // ionViewDidEnter(){\n  //   //Subscribe to any auth changes event\n  //   //console.log(\"ionViewDidEnter\");\n  //     this.firebaseService.getListingDataSource();\n  // }\n\n  async openItemUpdateModal() {\n    const modal = await this.modalController.create({\n      component: UpdateJobAreaModal,\n      componentProps: {\n        'user': this.user\n      }\n    });\n    await modal.present();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../../shell/data-store';\nimport { JobAreasService } from '../job-areas.service';\nimport { JobAreaDetailModel } from '../../../dbmodels/job-areas';\n\n\n@Injectable()\nexport class JobAreasDetailsResolver implements Resolve<any> {\n\n  constructor(private firebaseService: JobAreasService) {}\n\n  resolve(route: ActivatedRouteSnapshot) {\n    const userId = route.paramMap.get('item_id');\n\n    const combinedUserDataSource: Observable<JobAreaDetailModel> = this.firebaseService\n    .getDetailsDataSource(userId);\n\n    const combinedUserDataStore: DataStore<JobAreaDetailModel> = this.firebaseService\n    .getDetailsStore(combinedUserDataSource);\n\n    return {user: combinedUserDataStore};\n  }\n}\n"],"sourceRoot":"webpack:///"}