{"version":3,"sources":["src/app/dbmodels/job-applications-manager-model.ts","src/app/dbmodels/job-filter-cache.ts","src/app/dbmodels/jobs-listing.model.ts","src/app/dbmodels/user-jobs-model.ts","src/app/jobs/jobs.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { ShellModel } from '../shell/data-store';\r\nimport { JobApplicationModel } from './job-application.model';\r\n\r\nexport class JobApplicationsManagerModel extends ShellModel {\r\n  pending: Array<JobApplicationModel> = [\r\n    {\r\n        id: 0,\r\n        applicant_id: 0,\r\n        applicant_name: '',\r\n        applicant_image: '',\r\n        user_name: '',\r\n        amount:'',\r\n        salary_type: '',\r\n        delivery_date: '',\r\n        status: '',\r\n        qcode: '',\r\n        comment: '',\r\n        job_id: 0,\r\n        currency: '',\r\n        jobTitle: '',\r\n        jobCode: '',\r\n        date_created: ''\r\n    }\r\n  ];\r\n  shortlisted: Array<JobApplicationModel> = [\r\n    {\r\n        id: 0,\r\n        applicant_id: 0,\r\n        applicant_name: '',\r\n        applicant_image: '',\r\n        user_name: '',\r\n        amount:'',\r\n        salary_type: '',\r\n        delivery_date: '',\r\n        status: '',\r\n        qcode: '',\r\n        comment: '',\r\n        job_id: 0,\r\n        currency: '',\r\n        jobTitle: '',\r\n        jobCode: '',\r\n        date_created: ''\r\n    }\r\n  ];\r\n\r\n  rejected: Array<JobApplicationModel> = [\r\n    {\r\n        id: 0,\r\n        applicant_id: 0,\r\n        applicant_name: '',\r\n        applicant_image: '',\r\n        user_name: '',\r\n        amount:'',\r\n        salary_type: '',\r\n        delivery_date: '',\r\n        status: '',\r\n        qcode: '',\r\n        comment: '',\r\n        job_id: 0,\r\n        currency: '',\r\n        jobTitle: '',\r\n        jobCode: '',\r\n        date_created: ''\r\n    },\r\n    {\r\n        id: 0,\r\n        applicant_id: 0,\r\n        applicant_name: '',\r\n        applicant_image: '',\r\n        user_name: '',\r\n        amount:'',\r\n        salary_type: '',\r\n        delivery_date: '',\r\n        status: '',\r\n        qcode: '',\r\n        comment: '',\r\n        job_id: 0,\r\n        currency: '',\r\n        jobTitle: '',\r\n        jobCode: '',\r\n        date_created: ''\r\n    }\r\n  ];\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","export class JobFilterCache{\r\n    jobArea:number = 0;\r\n    skillID:string = \"\";\r\n    address:string = \"\";\r\n    latitude:string = \"\";\r\n    longitude:string = \"\";\r\n    km_radius:number = 5000;\r\n    status:string = \"Active\";\r\n\r\n    //Complex Filters\r\n    job_type: number[];\r\n    job_types:string = \"\";\r\n    online_status:string = \"\";\r\n    selected_skills_arr:number[];\r\n    //selected_skills:string = \"\";\r\n\r\n    min_salary:number= 0;\r\n    max_salary:number= 0;\r\n\r\n    salary_type: string = \"\";\r\n    currency: string = \"USD\";\r\n    sort_by: string = \"RELEVANCE\";\r\n    work_experience_min:number = 0;\r\n    work_experience_max:number = 10;\r\n    salary_range:{\"lower\":0,\"upper\":5};\r\n\r\n    constructor(){\r\n\r\n    }\r\n}","import * as dayjs from 'dayjs';\n\nimport { ShellModel } from '../shell/data-store';\nimport { CompanyModel } from './company-model';\n\nexport class JobItemModel extends ShellModel{\n  id:number;\n  title: string;\n  qcode: string;\n  job_description: string;\n  user_id: number;\n  job_type: number;\n  job_type_name: string;\n  status:string;\n  category_id: number;\n  currency: string;\n  salary_type: string;\n  job_area: number;\n  job_area_name: string;\n  distance:number;\n  latitude:number;\n  longitude:number;\n  address:string;\n  date_created:string;\n  date_updated:string;\n  date_closing:string;\n\n  numApplications:number;\n  numShortlists:number;\n  numViews:number;\n  numTotalViews:number;\n\n  //Personal Stats\n  numMyViews:number;\n  hasApplied:boolean;\n  applicationStatus:string;\n\n  jobSkills: Array<{\n    id: number, title: string}> = [\n      {id:0, title:''},\n      {id:0, title:''},\n      {id:0, title:''},\n     {id:0, title:''}\n  ];\n  jobPrefs:JobRequestPrefs;\n  jobSalary: JobRequestSalary;\n  company: CompanyModel;\n  expirationDate: string;\n  //expirationDate: string = dayjs().add(5, 'day').format('MM/DD/YYYY HH:mm:ss') as string;\n}\n\n\nexport class JobRequestPrefs{\n    id: string;\n    job_id: number;\n    is_loc_enabled:number;\n    notify_range:number;\n    minExp:number;\n    maxExp:number;\n    enableCustomOffer:number;\n    notify_email:string;\n}\n\nexport class JobRequestSalary{\n  id: string;\n  job_id: number;\n  min_salary:number;\n  max_salary:number;\n  fixed_fee:number;\n  min_rate_per_hour:number;\n  max_rate_per_hour:number;\n}\n\nexport class JobListingModel extends ShellModel {\n  error: true;\n  message: string = \"\";\n  numRecords: number = 0;\n  items: Array<JobItemModel> = [\n    new JobItemModel(),\n    new JobItemModel(),\n    new JobItemModel(),\n    new JobItemModel()\n  ];\n\n  constructor() {\n    super();\n  }\n\n  public setItems(items:any){\n    this.items = items;\n  }\n}\n","import { ShellModel } from '../shell/data-store';\r\n\r\nexport class UserJobModel extends ShellModel {\r\n  job_requests: Array<{\r\n    title: string,\r\n    job_description: string,\r\n    job_area: string,\r\n    job_type: string,\r\n    salary:string;\r\n    salary_type:string;\r\n    status: string,\r\n    date_requested:string,\r\n    numOffers: number}> = [\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        numOffers: 0\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        numOffers: 0\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        numOffers: 0\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        numOffers: 0\r\n    }\r\n  ];\r\n  ongoing_jobs: Array<{\r\n    title: string,\r\n    job_description: string,\r\n    job_area: string,\r\n    job_type: string,\r\n    salary: '',\r\n    salary_type: '',\r\n    status: string,\r\n    progress: string,\r\n    date_requested:string,\r\n    date_approved:string,\r\n    grafter_name:string,\r\n    grafter_image:string,\r\n    expected_delivery: string}> = [\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        progress: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        expected_delivery: '',\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        progress: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        expected_delivery: '',\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        progress: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        expected_delivery: '',\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        progress: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        expected_delivery: '',\r\n    }\r\n  ];\r\n\r\n  completed_jobs: Array<{\r\n    title: string,\r\n    job_description: string,\r\n    job_area: string,\r\n    job_type: string,\r\n    salary: string,\r\n        salary_type: string,\r\n    status: string,\r\n    date_requested:string,\r\n    date_approved:string,\r\n    date_completed:string,\r\n    grafter_name:string,\r\n    grafter_image:string,\r\n    is_rated: boolean,\r\n   rating:number}> = [\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        date_completed: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        is_rated: false,\r\n        rating: 0\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        date_completed: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        is_rated: false,\r\n        rating: 0\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        date_completed: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        is_rated: false,\r\n        rating: 0\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        date_completed: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        is_rated: false,\r\n        rating: 0\r\n    }\r\n  ];\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\nimport * as dayjs from 'dayjs';\n\nimport { JobListingModel, JobItemModel } from '../dbmodels/jobs-listing.model';\nimport { DataStore } from '../shell/data-store';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { UserJobModel } from '../dbmodels/user-jobs-model';\nimport { environment } from '../../environments/environment';\nimport { JobApplicationsManagerModel } from '../dbmodels/job-applications-manager-model';\nimport { AuthConstants } from '../config/AuthConstants';\nimport { StorageService } from '../services/storage.service';\nimport { JobFilterCache } from '../dbmodels/job-filter-cache';\nimport { ToastService } from '../services/toast.service';\n\n@Injectable()\nexport class JobService {\n  jobFilterData:JobFilterCache;\n  invokeFilterChangeEvent: Subject<any> = new Subject();\n  private listingDataStore: DataStore<JobListingModel>;\n  private detailsDataStore: DataStore<JobItemModel>;\n  private jobManagerDataStore: DataStore<UserJobModel>;\n  private jobApplicationsManagerDataStore: DataStore<JobApplicationsManagerModel>;\n  //invokeEvent: Subject<any> = new Subject();\n  \n  constructor(private http: HttpClient, \n    private toastService: ToastService,\n    private storageService: StorageService) { }\n\n  getFilterData() : JobFilterCache{\n    if(this.jobFilterData !== null && this.jobFilterData !== undefined){\n      return this.jobFilterData; \n    }else{\n      if(AuthConstants.DEV_MODE){\n        this.toastService.presentToast(\"Returning New Cache Box\");\n      }\n      return new JobFilterCache(); \n    }\n } \n\n setFilterData(data:any){\n     this.jobFilterData = data;\n     //this.invokeEvent.next(data);\n     this.invokeFilterChangeEvent.next(data);\n     this.storageService.store(AuthConstants.USER_FILTER_CACHE, data);\n     this.storageService.get(AuthConstants.USER_FILTER_CACHE).then(results=>{\n       //alert(results);\n     });\n }\n\n\n\n  get relativeDates(): Array<string> {\n    return [\n      dayjs().add(1, 'day').add(8, 'hour').add(10, 'second').format('MM/DD/YYYY HH:mm:ss') as string,\n      dayjs().add(7, 'day').format('MM/DD/YYYY') as string,\n      dayjs().subtract(1, 'month').format('MM/DD/YYYY') as string,\n      dayjs().add(2, 'month').format('MM/DD/YYYY') as string\n    ];\n  }\n\n  // public getListingDataSource(): Observable<JobListingModel> {\n  //   return this.http.get<JobListingModel>('./assets/sample-data/deals/listing.json').pipe(\n  //     map(listingData => {\n  //       // using rest operator to divide the data https://dev.to/napoleon039/how-to-use-the-spread-and-rest-operator-4jbb\n  //       const {items, ...otherData} = listingData;\n\n  //       const itemsWithRelativeDates = items.map((dealItem, index) => {\n  //         // Relative date (better to showcase UI micro-interactions)\n  //         return {...dealItem, expirationDate: this.relativeDates[index]};\n  //       });\n  //       // using spread operator to concat the data https://dev.to/napoleon039/how-to-use-the-spread-and-rest-operator-4jbb\n  //       return {...otherData, items: itemsWithRelativeDates};\n  //     })\n  //   );\n  // }\n\n\n  callJobCreateAPI(apiKey:any, postData: any): Observable<any> {\n    const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': apiKey\n    })\n    };\n    const url = environment.apiUrl + 'job_requests/create';\n    console.log(\"Hiting \"+url+\" with => \"+JSON.stringify(postData)+\" via Token \"+apiKey);\n    return this.http.post(url, postData, httpOptions);\n  }\n\n  public getListingDataSource(apiKey:any, postData:any): Observable<JobListingModel> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': apiKey\n      })\n      };\n      const url = environment.apiUrl + 'job_requests/list';\n      console.log(\"Hiting \"+url+\" with => \"+JSON.stringify(postData)+\" via Token \"+apiKey);\n      return this.http.post<JobListingModel>(url, postData, httpOptions);\n  }\n\n  public getListingStore(dataSource: Observable<JobListingModel>): DataStore<JobListingModel> {\n    if (!this.listingDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: JobListingModel = new JobListingModel();\n      this.listingDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.listingDataStore.load(dataSource);\n    }\n    return this.listingDataStore;\n  }\n\n  public getDetailsStore(dataSource: Observable<JobItemModel>): DataStore<JobItemModel> {\n    // Initialize the model specifying that it is a shell model\n    const shellModel: JobItemModel = new JobItemModel();\n    this.detailsDataStore = new DataStore(shellModel);\n    // Trigger the loading mechanism (with shell) in the dataStore\n    this.detailsDataStore.load(dataSource);\n    return this.detailsDataStore;\n  }\n\n     /**************** GET JOB DETAIL ******************/\n     public getJobRequestDetailDataSource(api_key:any, user_id:any): Observable<any> {\n      let postData = {qcode: user_id};    \n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type':  'application/json',\n          'Authorization': api_key\n        })\n        };\n        const url = environment.apiUrl + 'apis/job_requests/viewer';\n        console.log(\"/************/ Hitting \"+url+\" with Qcode=> \"+user_id+\" via \"+api_key);\n        return this.http.post<any>(url, postData, httpOptions);\n\n        // return this.http.post<any>(url, postData, httpOptions).pipe(\n        //   map(detailsData => {\n        //     const expirationDate = dayjs().add(1, 'day').add(8, 'hour').add(10, 'second').format('MM/DD/YYYY HH:mm:ss') as string;\n        //     return {...detailsData, expirationDate};\n        //   })\n        // );\n  \n    }\n    /*******************************/\n\n  /**************** JOB MANAGER PAGES ***************/\n  public getJobManagerDataSource(apiKey:any): Observable<UserJobModel> {\n    //return this.http.get<UserJobModel>('./assets/sample-data/user/user-jobs-manager.json');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': apiKey\n      })\n      };\n      let postData = {};\n      const url = environment.apiUrl + 'apis/job_requests/manager';\n      //const url = environment.apiUrl + 'apis/job_requests/manager/delll';\n      //return this.http.post<JobApplications0ManagerModel>(url, postData, httpOptions);\n      return this.http.post<any>(url, postData, httpOptions).pipe(\n        map(detailsData => {\n          return detailsData.items;\n        })\n      );\n  }\n\n  public getJobManagerStore(dataSource: Observable<UserJobModel>): DataStore<UserJobModel> {\n    // Use cache if available\n    if (!this.jobManagerDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: UserJobModel = new UserJobModel();\n      this.jobManagerDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.jobManagerDataStore.load(dataSource);\n    }\n    return this.jobManagerDataStore;\n  }\n   /**************** JOB MANAGER PAGES ***************/\n\n\n\n  /**************** JOB APPLICATIONS ******************/\n  callSubmitApplicationAPI(apiKey:any, postData: any): Observable<any> {\n    const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': apiKey\n    })\n    };\n    const url = environment.apiUrl + 'apis/job_applications/create';\n    console.log(\"Hiting \"+url+\" with => \"+JSON.stringify(postData)+\" via Token \"+apiKey);\n    return this.http.post(url, postData, httpOptions);\n  }\n\n  callApplicationStatusUpdateAPI(apiKey:any, postData: any): Observable<any> {\n    const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': apiKey\n    })\n    };\n    const url = environment.apiUrl + 'apis/job_applications/processing/update';\n    console.log(\"Hiting \"+url+\" with => \"+JSON.stringify(postData)+\" via Token \"+apiKey);\n    return this.http.post(url, postData, httpOptions);\n  }\n\n   /**************** JOB MANAGER PAGES ***************/\n   public getJobApplicationsManagerDataSource(apiKey:any, postData: any): Observable<any> {\n    //return this.http.get<JobApplicationsManagerModel>('./assets/sample-data/job-applications.json');\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': apiKey\n      })\n      };\n      const url = environment.apiUrl + 'apis/job_applications/manager';\n      //return this.http.post<JobApplicationsManagerModel>(url, postData, httpOptions);\n\n      return this.http.post<any>(url, postData, httpOptions).pipe(\n        map(detailsData => {\n          return detailsData.items;\n        })\n      );\n  }\n\n  public getJobApplicationsManagerStore(dataSource: Observable<JobApplicationsManagerModel>): DataStore<JobApplicationsManagerModel> {\n    // Use cache if available\n    if (!this.jobApplicationsManagerDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: JobApplicationsManagerModel = new JobApplicationsManagerModel();\n      this.jobApplicationsManagerDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.jobApplicationsManagerDataStore.load(dataSource);\n    }\n    return this.jobApplicationsManagerDataStore;\n  }\n   /**************** JOB MANAGER PAGES ***************/\n\n /****************####### END OF JOB APPLICATIONS ########******************/\n\n\n\n   /************* JOB VIEWS***********/\n   hitJobViewsAPI(apiKey:any, postData: any): Observable<any> {\n    const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': apiKey\n    })\n    };\n    const url = environment.apiUrl + '/apis/job_requests/register-views';\n    console.log(\"Hiting \"+url+\" with => \"+JSON.stringify(postData)+\" via Token \"+apiKey);\n    return this.http.post(url, postData, httpOptions);\n  }\n  /************* JOB VIEWS***********/\n\n\n}\n"],"sourceRoot":"webpack:///","file":"default~details-job-details-module~job-applications-manager-manager-module~jobs-accept-job-form-acce~c0d0a811-es5.js"}