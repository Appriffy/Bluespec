{"version":3,"sources":["./src/app/dbmodels/user-jobs-model.ts","./src/app/jobs/details/job-details.model.ts","./src/app/jobs/jobs.service.ts","./src/app/jobs/listing/jobs-listing.model.ts"],"names":[],"mappings":"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","file":"default~jobs-details-job-details-module~jobs-listing-job-filter-job-filter-module~jobs-listing-jobs-~61e8ee3f-es2015.js","sourcesContent":["import { ShellModel } from '../shell/data-store';\r\n\r\nexport class UserJobModel extends ShellModel {\r\n  job_requests: Array<{\r\n    title: string,\r\n    job_description: string,\r\n    job_area: string,\r\n    job_type: string,\r\n    salary:string;\r\n    salary_type:string;\r\n    status: string,\r\n    date_requested:string,\r\n    numOffers: number}> = [\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        numOffers: 0\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        numOffers: 0\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        numOffers: 0\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        numOffers: 0\r\n    }\r\n  ];\r\n  ongoing_jobs: Array<{\r\n    title: string,\r\n    job_description: string,\r\n    job_area: string,\r\n    job_type: string,\r\n    salary: '',\r\n        salary_type: '',\r\n    status: string,\r\n    progress: string,\r\n    date_requested:string,\r\n    date_approved:string,\r\n    grafter_name:string,\r\n    grafter_image:string,\r\n    expected_delivery: string}> = [\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        progress: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        expected_delivery: '',\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        progress: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        expected_delivery: '',\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        progress: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        expected_delivery: '',\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        progress: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        expected_delivery: '',\r\n    }\r\n  ];\r\n\r\n  completed_jobs: Array<{\r\n    title: string,\r\n    job_description: string,\r\n    job_area: string,\r\n    job_type: string,\r\n    salary: string,\r\n        salary_type: string,\r\n    status: string,\r\n    date_requested:string,\r\n    date_approved:string,\r\n    date_completed:string,\r\n    grafter_name:string,\r\n    grafter_image:string,\r\n    is_rated: boolean,\r\n   rating:number}> = [\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        date_completed: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        is_rated: false,\r\n        rating: 0\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        date_completed: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        is_rated: false,\r\n        rating: 0\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        date_completed: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        is_rated: false,\r\n        rating: 0\r\n    },\r\n    {\r\n        title: '',\r\n        job_description: '',\r\n        job_area: '',\r\n        job_type: '',\r\n        salary: '',\r\n        salary_type: '',\r\n        status: '',\r\n        date_requested: '',\r\n        date_approved: '',\r\n        date_completed: '',\r\n        grafter_name: '',\r\n        grafter_image: '',\r\n        is_rated: false,\r\n        rating: 0\r\n    }\r\n  ];\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import * as dayjs from 'dayjs';\n\nimport { ShellModel } from '../../shell/data-store';\n\nexport class JobDetailsModel extends ShellModel {\n  showcaseImages: Array<string> = [\n    '',\n    '',\n    ''\n  ];\n  previewImage: string;\n  logo: string;\n  title: string;\n  code: string;\n  job_type: string;\n  job_status:string;\n  job_location: string;\n  latitude: string;\n  longitude: string;\n  radius:number;\n  job_address:string;\n  min_salary: number;\n  max_salary: number;\n  currency: string;\n  salary_type: number;\n  salary_type_name: string;\n  min_experience:number;\n  max_experience:number;\n  distance:number;\n  job_area:string;\n  job_area_id:number;\n  skills:Array<{id: string, title: string}> = [\n    {\n      id: '',\n      title: ''\n    },\n    {\n      id: '',\n      title: ''\n    },\n    {\n      id: '',\n      title: ''\n    }\n  ];\n  description: string;\n  job_details:Array<{id: string, title: string, description: string}> = [\n    {\n      id: '',\n      title: '',\n      description: ''\n    },\n    {\n      id: '',\n      title: '',\n      description: ''\n    },\n    {\n      id: '',\n      title: '',\n      description: ''\n    }\n  ];\n  // Default mock value\n  // expirationDate = '03/03/2019';\n  expirationDate: string = dayjs().add(5, 'day').format('MM/DD/YYYY HH:mm:ss') as string;\n  relatedDeals: Array<{logo: string, name: string, description: string}> = [\n    {\n      logo: '',\n      name: '',\n      description: ''\n    },\n    {\n      logo: '',\n      name: '',\n      description: ''\n    },\n    {\n      logo: '',\n      name: '',\n      description: ''\n    }\n  ];\n\n  constructor() {\n    super();\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\nimport * as dayjs from 'dayjs';\n\nimport { JobListingModel } from './listing/jobs-listing.model';\nimport { JobDetailsModel } from './details/job-details.model';\nimport { DataStore } from '../shell/data-store';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { UserJobModel } from '../dbmodels/user-jobs-model';\nimport { environment } from '../../environments/environment';\n\n@Injectable()\nexport class JobService {\n  jobFilterData:any;\n  private listingDataStore: DataStore<JobListingModel>;\n  private detailsDataStore: DataStore<JobDetailsModel>;\n  private jobManagerDataStore: DataStore<UserJobModel>;\n  invokeEvent: Subject<any> = new Subject(); \n  \n  constructor(private http: HttpClient) { }\n\n  getFilterData(){ \n    return this.jobFilterData; \n } \n\n setFilterData(data:any){\n     this.jobFilterData = data;\n     this.invokeEvent.next(data);\n }\n\n\n\n  get relativeDates(): Array<string> {\n    return [\n      dayjs().add(1, 'day').add(8, 'hour').add(10, 'second').format('MM/DD/YYYY HH:mm:ss') as string,\n      dayjs().add(7, 'day').format('MM/DD/YYYY') as string,\n      dayjs().subtract(1, 'month').format('MM/DD/YYYY') as string,\n      dayjs().add(2, 'month').format('MM/DD/YYYY') as string\n    ];\n  }\n\n  // public getListingDataSource(): Observable<JobListingModel> {\n  //   return this.http.get<JobListingModel>('./assets/sample-data/deals/listing.json').pipe(\n  //     map(listingData => {\n  //       // using rest operator to divide the data https://dev.to/napoleon039/how-to-use-the-spread-and-rest-operator-4jbb\n  //       const {items, ...otherData} = listingData;\n\n  //       const itemsWithRelativeDates = items.map((dealItem, index) => {\n  //         // Relative date (better to showcase UI micro-interactions)\n  //         return {...dealItem, expirationDate: this.relativeDates[index]};\n  //       });\n  //       // using spread operator to concat the data https://dev.to/napoleon039/how-to-use-the-spread-and-rest-operator-4jbb\n  //       return {...otherData, items: itemsWithRelativeDates};\n  //     })\n  //   );\n  // }\n\n\n  callJobCreateAPI(apiKey:any, postData: any): Observable<any> {\n    const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': apiKey\n    })\n    };\n    const url = environment.apiUrl + 'job_requests/create';\n    console.log(\"Hiting \"+url+\" with => \"+JSON.stringify(postData)+\" via Token \"+apiKey);\n    return this.http.post(url, postData, httpOptions);\n  }\n\n  public getListingDataSource(apiKey:any, postData:any): Observable<JobListingModel> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': apiKey\n      })\n      };\n      const url = environment.apiUrl + 'job_requests/list';\n      return this.http.post<JobListingModel>(url, postData, httpOptions);\n  }\n\n  public getListingStore(dataSource: Observable<JobListingModel>): DataStore<JobListingModel> {\n    if (!this.listingDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: JobListingModel = new JobListingModel();\n      this.listingDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.listingDataStore.load(dataSource);\n    }\n    return this.listingDataStore;\n  }\n\n  public getDetailsDataSource(): Observable<JobDetailsModel> {\n    return this.http.get<JobDetailsModel>('./assets/sample-data/deals/details.json').pipe(\n      map(detailsData => {\n        const expirationDate = dayjs().add(1, 'day').add(8, 'hour').add(10, 'second').format('MM/DD/YYYY HH:mm:ss') as string;\n        return {...detailsData, expirationDate};\n      })\n    );\n  }\n\n  public getDetailsStore(dataSource: Observable<JobDetailsModel>): DataStore<JobDetailsModel> {\n    // Initialize the model specifying that it is a shell model\n    const shellModel: JobDetailsModel = new JobDetailsModel();\n    this.detailsDataStore = new DataStore(shellModel);\n    // Trigger the loading mechanism (with shell) in the dataStore\n    this.detailsDataStore.load(dataSource);\n    return this.detailsDataStore;\n  }\n\n  /**************** MANAGER PAGES ***************/\n  public getJobManagerDataSource(): Observable<UserJobModel> {\n    return this.http.get<UserJobModel>('./assets/sample-data/user/user-jobs-manager.json');\n  }\n\n  public getJobManagerStore(dataSource: Observable<UserJobModel>): DataStore<UserJobModel> {\n    // Use cache if available\n    if (!this.jobManagerDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: UserJobModel = new UserJobModel();\n      this.jobManagerDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.jobManagerDataStore.load(dataSource);\n    }\n    return this.jobManagerDataStore;\n  }\n   /**************** MANAGER PAGES ***************/\n\n}\n","import * as dayjs from 'dayjs';\n\nimport { ShellModel } from '../../shell/data-store';\n\nexport class JobItemModel {\n  id:number;\n  slug: string;\n  logo: string;\n  title: string;\n  code: string;\n  job_type: string;\n  job_status:string;\n  job_location: string;\n  min_salary: number;\n  max_salary: number;\n  currency: string;\n  salary_type: number;\n  salary_type_name: string;\n  min_experience:number;\n  max_experience:number;\n  distance:number;\n  job_area:string;\n  job_area_id:number;\n  skills:[];\n  description: string;\n  postDate: string;\n  // Default mock value\n  // expirationDate = '12/01/2018';\n  expirationDate: string = dayjs().add(5, 'day').format('MM/DD/YYYY HH:mm:ss') as string;\n}\n\nexport class JobListingModel extends ShellModel {\n  error: true;\n  message: string = \"\";\n  numRecords: number = 0;\n  items: Array<JobItemModel> = [\n    new JobItemModel(),\n    new JobItemModel(),\n    new JobItemModel(),\n    new JobItemModel()\n  ];\n\n  constructor() {\n    super();\n  }\n\n  public setItems(items:any){\n    this.items = items;\n  }\n}\n"],"sourceRoot":"webpack:///"}